{
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\server.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\server.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _db = require(\"./db\");\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nvar _passportConfig = _interopRequireDefault(require(\"./helpers/passportConfig\"));\n\nvar _expressSession = _interopRequireDefault(require(\"express-session\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar express = require(\"express\");\n\nvar _require = require(\"express-graphql\"),\n    graphqlHTTP = _require.graphqlHTTP;\n\nvar schema = require(\"./schema\");\n\nvar app = express();\n\nvar cors = require(\"cors\");\n\n(0, _passportConfig[\"default\"])(_passport[\"default\"]);\napp.use((0, _expressSession[\"default\"])({\n  secret: 'keyboard cat',\n  resave: false,\n  saveUninitialized: false\n}));\napp.use(_passport[\"default\"].initialize());\napp.use(_passport[\"default\"].session());\napp.use('/graphql', cors({\n  origin: \"http://localhost:3000\",\n  credentials: true\n}), graphqlHTTP({\n  schema: schema,\n  graphiql: true\n}));\napp.use(cors());\napp.get(\"/\", /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(req, res) {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _db.sequelize.models.user.sync();\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}());\napp.listen(5000, function () {\n  return console.log(\"server started\");\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImdyYXBocWxIVFRQIiwic2NoZW1hIiwiYXBwIiwiY29ycyIsInBhc3Nwb3J0IiwidXNlIiwic2VjcmV0IiwicmVzYXZlIiwic2F2ZVVuaW5pdGlhbGl6ZWQiLCJpbml0aWFsaXplIiwic2Vzc2lvbiIsIm9yaWdpbiIsImNyZWRlbnRpYWxzIiwiZ3JhcGhpcWwiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZXF1ZWxpemUiLCJtb2RlbHMiLCJ1c2VyIiwic3luYyIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBR0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7O0FBTkEsSUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7ZUFDdUJBLE9BQU8sQ0FBQyxpQkFBRCxDO0lBQXRCQyxXLFlBQUFBLFc7O0FBQ1IsSUFBTUMsTUFBTSxHQUFFRixPQUFPLENBQUMsVUFBRCxDQUFyQjs7QUFLQSxJQUFNRyxHQUFHLEdBQUdKLE9BQU8sRUFBbkI7O0FBQ0EsSUFBTUssSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFHQSxnQ0FBbUJLLG9CQUFuQjtBQUdBRixHQUFHLENBQUNHLEdBQUosQ0FBUSxnQ0FBUTtBQUNaQyxFQUFBQSxNQUFNLEVBQUUsY0FESTtBQUVaQyxFQUFBQSxNQUFNLEVBQUUsS0FGSTtBQUdaQyxFQUFBQSxpQkFBaUIsRUFBRTtBQUhQLENBQVIsQ0FBUjtBQU1BTixHQUFHLENBQUNHLEdBQUosQ0FBUUQscUJBQVNLLFVBQVQsRUFBUjtBQUNBUCxHQUFHLENBQUNHLEdBQUosQ0FBUUQscUJBQVNNLE9BQVQsRUFBUjtBQUVBUixHQUFHLENBQUNHLEdBQUosQ0FBUSxVQUFSLEVBQW1CRixJQUFJLENBQUM7QUFBRVEsRUFBQUEsTUFBTSxFQUFFLHVCQUFWO0FBQW1DQyxFQUFBQSxXQUFXLEVBQUU7QUFBaEQsQ0FBRCxDQUF2QixFQUFpRlosV0FBVyxDQUFDO0FBQ3pGQyxFQUFBQSxNQUFNLEVBQU5BLE1BRHlGO0FBRXpGWSxFQUFBQSxRQUFRLEVBQUU7QUFGK0UsQ0FBRCxDQUE1RjtBQUlBWCxHQUFHLENBQUNHLEdBQUosQ0FBUUYsSUFBSSxFQUFaO0FBRUFELEdBQUcsQ0FBQ1ksR0FBSixDQUFRLEdBQVI7QUFBQSxxRUFBYSxpQkFBT0MsR0FBUCxFQUFXQyxHQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLG1CQUNIQyxjQUFVQyxNQUFWLENBQWlCQyxJQUFqQixDQUFzQkMsSUFBdEIsRUFERzs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHQUFiOztBQUFBO0FBQUE7QUFBQTtBQUFBO0FBSUFsQixHQUFHLENBQUNtQixNQUFKLENBQVcsSUFBWCxFQUFrQjtBQUFBLFNBQUtDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLENBQUw7QUFBQSxDQUFsQiIsInNvdXJjZVJvb3QiOiJDOlxccHl0aG9uXFxwcm9qZWN0c1xcaGF0ZXJncmFtXFxhcGlcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKFwiZXhwcmVzc1wiKVxyXG5jb25zdCB7IGdyYXBocWxIVFRQIH09IHJlcXVpcmUoXCJleHByZXNzLWdyYXBocWxcIilcclxuY29uc3Qgc2NoZW1hID1yZXF1aXJlKFwiLi9zY2hlbWFcIilcclxuaW1wb3J0IHsgc2VxdWVsaXplIH0gZnJvbSBcIi4vZGJcIlxyXG5pbXBvcnQgcGFzc3BvcnQgZnJvbSBcInBhc3Nwb3J0XCI7XHJcbmltcG9ydCBpbml0aWFsaXplUGFzc3BvcnQgIGZyb20gXCIuL2hlbHBlcnMvcGFzc3BvcnRDb25maWdcIlxyXG5pbXBvcnQgc2Vzc2lvbiBmcm9tIFwiZXhwcmVzcy1zZXNzaW9uXCJcclxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xyXG5jb25zdCBjb3JzID0gcmVxdWlyZShcImNvcnNcIilcclxuXHJcblxyXG5pbml0aWFsaXplUGFzc3BvcnQocGFzc3BvcnQpXHJcblxyXG5cclxuYXBwLnVzZShzZXNzaW9uKHtcclxuICAgIHNlY3JldDogJ2tleWJvYXJkIGNhdCcsXHJcbiAgICByZXNhdmU6IGZhbHNlLFxyXG4gICAgc2F2ZVVuaW5pdGlhbGl6ZWQ6IGZhbHNlLFxyXG4gICAgXHJcbn0pKVxyXG5hcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSlcclxuYXBwLnVzZShwYXNzcG9ydC5zZXNzaW9uKCkpXHJcblxyXG5hcHAudXNlKCcvZ3JhcGhxbCcsY29ycyh7IG9yaWdpbjogXCJodHRwOi8vbG9jYWxob3N0OjMwMDBcIiwgY3JlZGVudGlhbHM6IHRydWUgfSksIGdyYXBocWxIVFRQKHtcclxuICAgIHNjaGVtYSxcclxuICAgIGdyYXBoaXFsOiB0cnVlXHJcbn0pKVxyXG5hcHAudXNlKGNvcnMoKSlcclxuXHJcbmFwcC5nZXQoXCIvXCIsIGFzeW5jIChyZXEscmVzKSA9PiB7XHJcbiAgICBhd2FpdCBzZXF1ZWxpemUubW9kZWxzLnVzZXIuc3luYygpXHJcbn0pXHJcblxyXG5hcHAubGlzdGVuKDUwMDAgLCAoKT0+IGNvbnNvbGUubG9nKFwic2VydmVyIHN0YXJ0ZWRcIikpIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "graphqlHTTP",
        "schema",
        "app",
        "cors",
        "passport",
        "use",
        "secret",
        "resave",
        "saveUninitialized",
        "initialize",
        "session",
        "origin",
        "credentials",
        "graphiql",
        "get",
        "req",
        "res",
        "sequelize",
        "models",
        "user",
        "sync",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAGA;;AACA;;AACA;;AACA;;;;;;;;AANA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;eACuBA,OAAO,CAAC,iBAAD,C;IAAtBC,W,YAAAA,W;;AACR,IAAMC,MAAM,GAAEF,OAAO,CAAC,UAAD,CAArB;;AAKA,IAAMG,GAAG,GAAGJ,OAAO,EAAnB;;AACA,IAAMK,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AAGA,gCAAmBK,oBAAnB;AAGAF,GAAG,CAACG,GAAJ,CAAQ,gCAAQ;AACZC,EAAAA,MAAM,EAAE,cADI;AAEZC,EAAAA,MAAM,EAAE,KAFI;AAGZC,EAAAA,iBAAiB,EAAE;AAHP,CAAR,CAAR;AAMAN,GAAG,CAACG,GAAJ,CAAQD,qBAASK,UAAT,EAAR;AACAP,GAAG,CAACG,GAAJ,CAAQD,qBAASM,OAAT,EAAR;AAEAR,GAAG,CAACG,GAAJ,CAAQ,UAAR,EAAmBF,IAAI,CAAC;AAAEQ,EAAAA,MAAM,EAAE,uBAAV;AAAmCC,EAAAA,WAAW,EAAE;AAAhD,CAAD,CAAvB,EAAiFZ,WAAW,CAAC;AACzFC,EAAAA,MAAM,EAANA,MADyF;AAEzFY,EAAAA,QAAQ,EAAE;AAF+E,CAAD,CAA5F;AAIAX,GAAG,CAACG,GAAJ,CAAQF,IAAI,EAAZ;AAEAD,GAAG,CAACY,GAAJ,CAAQ,GAAR;AAAA,qEAAa,iBAAOC,GAAP,EAAWC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACHC,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,IAAtB,EADG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAAA;AAAA;AAAA;AAAA;AAIAlB,GAAG,CAACmB,MAAJ,CAAW,IAAX,EAAkB;AAAA,SAAKC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAL;AAAA,CAAlB",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "sourcesContent": [
        "const express = require(\"express\")\r\nconst { graphqlHTTP }= require(\"express-graphql\")\r\nconst schema =require(\"./schema\")\r\nimport { sequelize } from \"./db\"\r\nimport passport from \"passport\";\r\nimport initializePassport  from \"./helpers/passportConfig\"\r\nimport session from \"express-session\"\r\nconst app = express();\r\nconst cors = require(\"cors\")\r\n\r\n\r\ninitializePassport(passport)\r\n\r\n\r\napp.use(session({\r\n    secret: 'keyboard cat',\r\n    resave: false,\r\n    saveUninitialized: false,\r\n    \r\n}))\r\napp.use(passport.initialize())\r\napp.use(passport.session())\r\n\r\napp.use('/graphql',cors({ origin: \"http://localhost:3000\", credentials: true }), graphqlHTTP({\r\n    schema,\r\n    graphiql: true\r\n}))\r\napp.use(cors())\r\n\r\napp.get(\"/\", async (req,res) => {\r\n    await sequelize.models.user.sync()\r\n})\r\n\r\napp.listen(5000 , ()=> console.log(\"server started\"))"
      ]
    },
    "sourceType": "script",
    "mtime": 1598609486667
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\schema.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\schema.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\schema.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\schema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
        "sourceFileName": "schema.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _graphql = require(\"graphql\");\n\nvar _signUp = require(\"./helpers/signUp\");\n\nvar _logIn = require(\"./helpers/logIn\");\n\nvar _db = require(\"./db\");\n\nvar bcrypt = require(\"bcryptjs\");\n\nvar UserType = new _graphql.GraphQLObjectType({\n  name: \"UserType\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLInt,\n        resolve: function resolve(user) {\n          return user.id;\n        }\n      },\n      email: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(user) {\n          return user.email;\n        }\n      },\n      username: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(user) {\n          return user.username;\n        }\n      },\n      avatar: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(user) {\n          return user.avatar;\n        }\n      },\n      posts: {\n        type: new _graphql.GraphQLList(PostType),\n        resolve: function resolve(user) {\n          return _db.sequelize.models.post.findAll({\n            where: {\n              userId: user.id\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar PostType = new _graphql.GraphQLObjectType({\n  name: \"PostType\",\n  fields: function fields() {\n    return {\n      id: {\n        type: _graphql.GraphQLInt,\n        resolve: function resolve(post) {\n          return post.id;\n        }\n      },\n      title: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(post) {\n          return post.title;\n        }\n      },\n      userId: {\n        type: _graphql.GraphQLInt,\n        resolve: function resolve(post) {\n          return post.userId;\n        }\n      },\n      image: {\n        type: _graphql.GraphQLString,\n        resolve: function resolve(post) {\n          return post.image;\n        }\n      },\n      user: {\n        type: new _graphql.GraphQLList(UserType),\n        resolve: function resolve(post) {\n          return _db.sequelize.models.user.findAll({\n            where: {\n              id: post.userId\n            }\n          });\n        }\n      }\n    };\n  }\n});\nvar Mutation = new _graphql.GraphQLObjectType({\n  name: 'Mutation',\n  fields: function fields() {\n    return {\n      addUser: {\n        type: UserType,\n        args: {\n          username: {\n            type: _graphql.GraphQLString\n          },\n          email: {\n            type: _graphql.GraphQLString\n          },\n          password: {\n            type: _graphql.GraphQLString\n          }\n        },\n        resolve: function resolve(root, _ref) {\n          var email = _ref.email,\n              password = _ref.password,\n              username = _ref.username;\n          return (0, _signUp.signUpHandle)({\n            email: email,\n            password: password,\n            username: username\n          });\n        }\n      },\n      login: {\n        type: UserType,\n        args: {\n          email: {\n            type: _graphql.GraphQLString\n          },\n          password: {\n            type: _graphql.GraphQLString\n          }\n        },\n        resolve: function resolve(root, _ref2, req) {\n          var email = _ref2.email,\n              password = _ref2.password;\n          return (0, _logIn.login)({\n            email: email,\n            password: password,\n            req: req\n          });\n        }\n      },\n      logout: {\n        type: UserType,\n        resolve: function resolve(root, args, req) {\n          var user = req.user;\n          req.logout();\n          return user;\n        }\n      }\n    };\n  }\n});\nvar RootQuery = new _graphql.GraphQLObjectType({\n  name: 'RootQueryType',\n  fields: function fields() {\n    return {\n      users: {\n        type: new _graphql.GraphQLList(UserType),\n        resolve: function resolve() {\n          return _db.sequelize.models.user.findAll();\n        }\n      },\n      user: {\n        type: UserType,\n        resolve: function resolve(root, args, req) {\n          return req.user;\n        }\n      },\n      posts: {\n        type: new _graphql.GraphQLList(PostType),\n        resolve: function resolve() {\n          return _db.sequelize.models.post.findAll();\n        }\n      }\n    };\n  }\n});\nmodule.exports = new _graphql.GraphQLSchema({\n  query: RootQuery,\n  mutation: Mutation\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjaGVtYS5qcyJdLCJuYW1lcyI6WyJiY3J5cHQiLCJyZXF1aXJlIiwiVXNlclR5cGUiLCJHcmFwaFFMT2JqZWN0VHlwZSIsIm5hbWUiLCJmaWVsZHMiLCJpZCIsInR5cGUiLCJHcmFwaFFMSW50IiwicmVzb2x2ZSIsInVzZXIiLCJlbWFpbCIsIkdyYXBoUUxTdHJpbmciLCJ1c2VybmFtZSIsImF2YXRhciIsInBvc3RzIiwiR3JhcGhRTExpc3QiLCJQb3N0VHlwZSIsInNlcXVlbGl6ZSIsIm1vZGVscyIsInBvc3QiLCJmaW5kQWxsIiwid2hlcmUiLCJ1c2VySWQiLCJ0aXRsZSIsImltYWdlIiwiTXV0YXRpb24iLCJhZGRVc2VyIiwiYXJncyIsInBhc3N3b3JkIiwicm9vdCIsImxvZ2luIiwicmVxIiwibG9nb3V0IiwiUm9vdFF1ZXJ5IiwidXNlcnMiLCJtb2R1bGUiLCJleHBvcnRzIiwiR3JhcGhRTFNjaGVtYSIsInF1ZXJ5IiwibXV0YXRpb24iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBV0E7O0FBQ0E7O0FBQ0E7O0FBSEEsSUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsVUFBRCxDQUF0Qjs7QUFJQSxJQUFNQyxRQUFRLEdBQUUsSUFBSUMsMEJBQUosQ0FBc0I7QUFDbENDLEVBQUFBLElBQUksRUFBRSxVQUQ0QjtBQUVsQ0MsRUFBQUEsTUFBTSxFQUFFO0FBQUEsV0FBTztBQUNYQyxNQUFBQSxFQUFFLEVBQUU7QUFDQUMsUUFBQUEsSUFBSSxFQUFFQyxtQkFETjtBQUVBQyxRQUFBQSxPQUZBLG1CQUVRQyxJQUZSLEVBRWE7QUFDVCxpQkFBT0EsSUFBSSxDQUFDSixFQUFaO0FBQ0g7QUFKRCxPQURPO0FBT1hLLE1BQUFBLEtBQUssRUFBQztBQUNGSixRQUFBQSxJQUFJLEVBQUVLLHNCQURKO0FBRUZILFFBQUFBLE9BRkUsbUJBRU1DLElBRk4sRUFFVztBQUNULGlCQUFPQSxJQUFJLENBQUNDLEtBQVo7QUFDSDtBQUpDLE9BUEs7QUFhWEUsTUFBQUEsUUFBUSxFQUFFO0FBQ05OLFFBQUFBLElBQUksRUFBRUssc0JBREE7QUFFTkgsUUFBQUEsT0FGTSxtQkFFRUMsSUFGRixFQUVPO0FBQ1QsaUJBQU9BLElBQUksQ0FBQ0csUUFBWjtBQUNIO0FBSkssT0FiQztBQW1CWEMsTUFBQUEsTUFBTSxFQUFDO0FBQ0hQLFFBQUFBLElBQUksRUFBRUssc0JBREg7QUFFSEgsUUFBQUEsT0FGRyxtQkFFS0MsSUFGTCxFQUVVO0FBQ1QsaUJBQU9BLElBQUksQ0FBQ0ksTUFBWjtBQUNIO0FBSkUsT0FuQkk7QUF5QlhDLE1BQUFBLEtBQUssRUFBRTtBQUNIUixRQUFBQSxJQUFJLEVBQUUsSUFBSVMsb0JBQUosQ0FBZ0JDLFFBQWhCLENBREg7QUFFSFIsUUFBQUEsT0FGRyxtQkFFS0MsSUFGTCxFQUVVO0FBQ1QsaUJBQU9RLGNBQVVDLE1BQVYsQ0FBaUJDLElBQWpCLENBQXNCQyxPQUF0QixDQUE4QjtBQUFFQyxZQUFBQSxLQUFLLEVBQUM7QUFBRUMsY0FBQUEsTUFBTSxFQUFHYixJQUFJLENBQUNKO0FBQWhCO0FBQVIsV0FBOUIsQ0FBUDtBQUNIO0FBSkU7QUF6QkksS0FBUDtBQUFBO0FBRjBCLENBQXRCLENBQWhCO0FBcUNBLElBQU1XLFFBQVEsR0FBRyxJQUFJZCwwQkFBSixDQUFzQjtBQUNuQ0MsRUFBQUEsSUFBSSxFQUFFLFVBRDZCO0FBRW5DQyxFQUFBQSxNQUFNLEVBQUU7QUFBQSxXQUFPO0FBQ1hDLE1BQUFBLEVBQUUsRUFBQztBQUNDQyxRQUFBQSxJQUFJLEVBQUVDLG1CQURQO0FBRUNDLFFBQUFBLE9BRkQsbUJBRVNXLElBRlQsRUFFYztBQUNWLGlCQUFPQSxJQUFJLENBQUNkLEVBQVo7QUFDRjtBQUpGLE9BRFE7QUFPWGtCLE1BQUFBLEtBQUssRUFBQztBQUNGakIsUUFBQUEsSUFBSSxFQUFDSyxzQkFESDtBQUVGSCxRQUFBQSxPQUZFLG1CQUVNVyxJQUZOLEVBRVc7QUFDVCxpQkFBT0EsSUFBSSxDQUFDSSxLQUFaO0FBQ0g7QUFKQyxPQVBLO0FBYVhELE1BQUFBLE1BQU0sRUFBRTtBQUNKaEIsUUFBQUEsSUFBSSxFQUFFQyxtQkFERjtBQUVKQyxRQUFBQSxPQUZJLG1CQUVJVyxJQUZKLEVBRVM7QUFDVCxpQkFBT0EsSUFBSSxDQUFDRyxNQUFaO0FBQ0g7QUFKRyxPQWJHO0FBb0JYRSxNQUFBQSxLQUFLLEVBQUU7QUFDSGxCLFFBQUFBLElBQUksRUFBRUssc0JBREg7QUFFSEgsUUFBQUEsT0FGRyxtQkFFS1csSUFGTCxFQUVVO0FBQ1QsaUJBQU9BLElBQUksQ0FBQ0ssS0FBWjtBQUNIO0FBSkUsT0FwQkk7QUEwQlhmLE1BQUFBLElBQUksRUFBQztBQUNESCxRQUFBQSxJQUFJLEVBQUUsSUFBSVMsb0JBQUosQ0FBZ0JkLFFBQWhCLENBREw7QUFFRE8sUUFBQUEsT0FGQyxtQkFFT1csSUFGUCxFQUVZO0FBQ1QsaUJBQU9GLGNBQVVDLE1BQVYsQ0FBaUJULElBQWpCLENBQXNCVyxPQUF0QixDQUE4QjtBQUFDQyxZQUFBQSxLQUFLLEVBQUU7QUFBRWhCLGNBQUFBLEVBQUUsRUFBRWMsSUFBSSxDQUFDRztBQUFYO0FBQVIsV0FBOUIsQ0FBUDtBQUNIO0FBSkE7QUExQk0sS0FBUDtBQUFBO0FBRjJCLENBQXRCLENBQWpCO0FBc0NBLElBQU1HLFFBQVEsR0FBRyxJQUFJdkIsMEJBQUosQ0FBc0I7QUFDbkNDLEVBQUFBLElBQUksRUFBQyxVQUQ4QjtBQUVuQ0MsRUFBQUEsTUFBTSxFQUFDO0FBQUEsV0FBTTtBQUNUc0IsTUFBQUEsT0FBTyxFQUFFO0FBQ0xwQixRQUFBQSxJQUFJLEVBQUVMLFFBREQ7QUFFTDBCLFFBQUFBLElBQUksRUFBQztBQUNEZixVQUFBQSxRQUFRLEVBQUU7QUFBQ04sWUFBQUEsSUFBSSxFQUFFSztBQUFQLFdBRFQ7QUFFREQsVUFBQUEsS0FBSyxFQUFFO0FBQUNKLFlBQUFBLElBQUksRUFBRUs7QUFBUCxXQUZOO0FBR0RpQixVQUFBQSxRQUFRLEVBQUU7QUFBQ3RCLFlBQUFBLElBQUksRUFBRUs7QUFBUDtBQUhULFNBRkE7QUFPSkgsUUFBQUEsT0FQSSxtQkFPSXFCLElBUEosUUFPc0M7QUFBQSxjQUEzQm5CLEtBQTJCLFFBQTNCQSxLQUEyQjtBQUFBLGNBQXBCa0IsUUFBb0IsUUFBcEJBLFFBQW9CO0FBQUEsY0FBVmhCLFFBQVUsUUFBVkEsUUFBVTtBQUN2QyxpQkFBTywwQkFBYTtBQUFDRixZQUFBQSxLQUFLLEVBQUxBLEtBQUQ7QUFBUWtCLFlBQUFBLFFBQVEsRUFBUkEsUUFBUjtBQUFrQmhCLFlBQUFBLFFBQVEsRUFBUkE7QUFBbEIsV0FBYixDQUFQO0FBQ0g7QUFUSSxPQURBO0FBWVRrQixNQUFBQSxLQUFLLEVBQUc7QUFDSnhCLFFBQUFBLElBQUksRUFBRUwsUUFERjtBQUVKMEIsUUFBQUEsSUFBSSxFQUFDO0FBQ0RqQixVQUFBQSxLQUFLLEVBQUM7QUFBQ0osWUFBQUEsSUFBSSxFQUFFSztBQUFQLFdBREw7QUFFRGlCLFVBQUFBLFFBQVEsRUFBRTtBQUFDdEIsWUFBQUEsSUFBSSxFQUFFSztBQUFQO0FBRlQsU0FGRDtBQU1KSCxRQUFBQSxPQU5JLG1CQU1JcUIsSUFOSixTQU02QkUsR0FON0IsRUFNaUM7QUFBQSxjQUF0QnJCLEtBQXNCLFNBQXRCQSxLQUFzQjtBQUFBLGNBQWZrQixRQUFlLFNBQWZBLFFBQWU7QUFDakMsaUJBQU8sa0JBQU07QUFBQ2xCLFlBQUFBLEtBQUssRUFBTEEsS0FBRDtBQUFRa0IsWUFBQUEsUUFBUSxFQUFSQSxRQUFSO0FBQWtCRyxZQUFBQSxHQUFHLEVBQUhBO0FBQWxCLFdBQU4sQ0FBUDtBQUNIO0FBUkcsT0FaQztBQXVCVEMsTUFBQUEsTUFBTSxFQUFHO0FBQ0wxQixRQUFBQSxJQUFJLEVBQUVMLFFBREQ7QUFFTE8sUUFBQUEsT0FGSyxtQkFFR3FCLElBRkgsRUFFU0YsSUFGVCxFQUVlSSxHQUZmLEVBRW1CO0FBQUEsY0FDYnRCLElBRGEsR0FDTnNCLEdBRE0sQ0FDYnRCLElBRGE7QUFFcEJzQixVQUFBQSxHQUFHLENBQUNDLE1BQUo7QUFDQSxpQkFBT3ZCLElBQVA7QUFDSDtBQU5JO0FBdkJBLEtBQU47QUFBQTtBQUY0QixDQUF0QixDQUFqQjtBQW9DQSxJQUFNd0IsU0FBUyxHQUFHLElBQUkvQiwwQkFBSixDQUFzQjtBQUNwQ0MsRUFBQUEsSUFBSSxFQUFFLGVBRDhCO0FBRXBDQyxFQUFBQSxNQUFNLEVBQUU7QUFBQSxXQUFPO0FBQ1g4QixNQUFBQSxLQUFLLEVBQUU7QUFDSDVCLFFBQUFBLElBQUksRUFBRSxJQUFJUyxvQkFBSixDQUFnQmQsUUFBaEIsQ0FESDtBQUVITyxRQUFBQSxPQUZHLHFCQUVNO0FBQ0wsaUJBQU9TLGNBQVVDLE1BQVYsQ0FBaUJULElBQWpCLENBQXNCVyxPQUF0QixFQUFQO0FBQ0g7QUFKRSxPQURJO0FBUVhYLE1BQUFBLElBQUksRUFBRTtBQUNGSCxRQUFBQSxJQUFJLEVBQUVMLFFBREo7QUFFRk8sUUFBQUEsT0FGRSxtQkFFTXFCLElBRk4sRUFFWUYsSUFGWixFQUVrQkksR0FGbEIsRUFFc0I7QUFDcEIsaUJBQU9BLEdBQUcsQ0FBQ3RCLElBQVg7QUFDSDtBQUpDLE9BUks7QUFjWEssTUFBQUEsS0FBSyxFQUFDO0FBQ0ZSLFFBQUFBLElBQUksRUFBRSxJQUFJUyxvQkFBSixDQUFnQkMsUUFBaEIsQ0FESjtBQUVGUixRQUFBQSxPQUZFLHFCQUVPO0FBQ0wsaUJBQU9TLGNBQVVDLE1BQVYsQ0FBaUJDLElBQWpCLENBQXNCQyxPQUF0QixFQUFQO0FBQ0g7QUFKQztBQWRLLEtBQVA7QUFBQTtBQUY0QixDQUF0QixDQUFsQjtBQTZCQWUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLElBQUlDLHNCQUFKLENBQWtCO0FBQy9CQyxFQUFBQSxLQUFLLEVBQUVMLFNBRHdCO0FBRS9CTSxFQUFBQSxRQUFRLEVBQUVkO0FBRnFCLENBQWxCLENBQWpCIiwic291cmNlUm9vdCI6IkM6XFxweXRob25cXHByb2plY3RzXFxoYXRlcmdyYW1cXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICAgIEdyYXBoUUxTY2hlbWEsXHJcbiAgICBHcmFwaFFMT2JqZWN0VHlwZSxcclxuICAgIEdyYXBoUUxMaXN0LFxyXG4gICAgR3JhcGhRTFN0cmluZyxcclxuICAgIEdyYXBoUUxJbnQsXHJcbiAgICBHcmFwaFFMSUQsXHJcbiAgICBcclxufVxyXG5mcm9tIFwiZ3JhcGhxbFwiXHJcbmNvbnN0IGJjcnlwdCA9IHJlcXVpcmUoXCJiY3J5cHRqc1wiKVxyXG5pbXBvcnQge3NpZ25VcEhhbmRsZX0gZnJvbSBcIi4vaGVscGVycy9zaWduVXBcIlxyXG5pbXBvcnQge2xvZ2lufSBmcm9tIFwiLi9oZWxwZXJzL2xvZ0luXCJcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gXCIuL2RiXCJcclxuY29uc3QgVXNlclR5cGU9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XHJcbiAgICBuYW1lOiBcIlVzZXJUeXBlXCIsXHJcbiAgICBmaWVsZHM6ICgpID0+ICh7XHJcbiAgICAgICAgaWQ6IHtcclxuICAgICAgICAgICAgdHlwZTogR3JhcGhRTEludCxcclxuICAgICAgICAgICAgcmVzb2x2ZSh1c2VyKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmlkXHJcbiAgICAgICAgICAgIH0gXHJcbiAgICAgICAgfSxcclxuICAgICAgICBlbWFpbDp7XHJcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxTdHJpbmcsXHJcbiAgICAgICAgICAgIHJlc29sdmUodXNlcil7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdXNlci5lbWFpbFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB1c2VybmFtZToge1xyXG4gICAgICAgICAgICB0eXBlOiBHcmFwaFFMU3RyaW5nLFxyXG4gICAgICAgICAgICByZXNvbHZlKHVzZXIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHVzZXIudXNlcm5hbWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXZhdGFyOntcclxuICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcclxuICAgICAgICAgICAgcmVzb2x2ZSh1c2VyKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmF2YXRhclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBwb3N0czoge1xyXG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTExpc3QoUG9zdFR5cGUpLFxyXG4gICAgICAgICAgICByZXNvbHZlKHVzZXIpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlcXVlbGl6ZS5tb2RlbHMucG9zdC5maW5kQWxsKHsgd2hlcmU6eyB1c2VySWQgOiB1c2VyLmlkfX0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9KVxyXG59KSBcclxuXHJcbmNvbnN0IFBvc3RUeXBlID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcclxuICAgIG5hbWU6IFwiUG9zdFR5cGVcIixcclxuICAgIGZpZWxkczogKCkgPT4gKHtcclxuICAgICAgICBpZDp7XHJcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxJbnQsXHJcbiAgICAgICAgICAgIHJlc29sdmUocG9zdCl7XHJcbiAgICAgICAgICAgICAgIHJldHVybiBwb3N0LmlkXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHRpdGxlOntcclxuICAgICAgICAgICAgdHlwZTpHcmFwaFFMU3RyaW5nLFxyXG4gICAgICAgICAgICByZXNvbHZlKHBvc3Qpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBvc3QudGl0bGVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdXNlcklkOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IEdyYXBoUUxJbnQsXHJcbiAgICAgICAgICAgIHJlc29sdmUocG9zdCl7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdC51c2VySWRcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaW1hZ2U6IHtcclxuICAgICAgICAgICAgdHlwZTogR3JhcGhRTFN0cmluZyxcclxuICAgICAgICAgICAgcmVzb2x2ZShwb3N0KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBwb3N0LmltYWdlXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHVzZXI6e1xyXG4gICAgICAgICAgICB0eXBlOiBuZXcgR3JhcGhRTExpc3QoVXNlclR5cGUpLFxyXG4gICAgICAgICAgICByZXNvbHZlKHBvc3Qpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlcXVlbGl6ZS5tb2RlbHMudXNlci5maW5kQWxsKHt3aGVyZTogeyBpZDogcG9zdC51c2VySWR9fSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIFxyXG4gICAgfSlcclxufSlcclxuXHJcbmNvbnN0IE11dGF0aW9uID0gbmV3IEdyYXBoUUxPYmplY3RUeXBlKHtcclxuICAgIG5hbWU6J011dGF0aW9uJyxcclxuICAgIGZpZWxkczooKSA9Pih7XHJcbiAgICAgICAgYWRkVXNlcjoge1xyXG4gICAgICAgICAgICB0eXBlOiBVc2VyVHlwZSxcclxuICAgICAgICAgICAgYXJnczp7XHJcbiAgICAgICAgICAgICAgICB1c2VybmFtZToge3R5cGU6IEdyYXBoUUxTdHJpbmd9LFxyXG4gICAgICAgICAgICAgICAgZW1haWw6IHt0eXBlOiBHcmFwaFFMU3RyaW5nfSxcclxuICAgICAgICAgICAgICAgIHBhc3N3b3JkOiB7dHlwZTogR3JhcGhRTFN0cmluZ31cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgIHJlc29sdmUocm9vdCwge2VtYWlsLCBwYXNzd29yZCwgdXNlcm5hbWV9KXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBzaWduVXBIYW5kbGUoe2VtYWlsLCBwYXNzd29yZCwgdXNlcm5hbWV9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBsb2dpbiA6IHtcclxuICAgICAgICAgICAgdHlwZTogVXNlclR5cGUsXHJcbiAgICAgICAgICAgIGFyZ3M6e1xyXG4gICAgICAgICAgICAgICAgZW1haWw6e3R5cGU6IEdyYXBoUUxTdHJpbmd9LFxyXG4gICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHt0eXBlOiBHcmFwaFFMU3RyaW5nfVxyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICByZXNvbHZlKHJvb3QsIHtlbWFpbCwgcGFzc3dvcmR9LCByZXEpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIGxvZ2luKHtlbWFpbCwgcGFzc3dvcmQsIHJlcX0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfSxcclxuICAgICAgICBsb2dvdXQgOiB7XHJcbiAgICAgICAgICAgIHR5cGU6IFVzZXJUeXBlLFxyXG4gICAgICAgICAgICByZXNvbHZlKHJvb3QsIGFyZ3MsIHJlcSl7XHJcbiAgICAgICAgICAgICAgICBjb25zdCB7dXNlcn09IHJlcVxyXG4gICAgICAgICAgICAgICAgcmVxLmxvZ291dCgpXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdXNlclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSlcclxufSlcclxuXHJcbmNvbnN0IFJvb3RRdWVyeSA9IG5ldyBHcmFwaFFMT2JqZWN0VHlwZSh7XHJcbiAgICBuYW1lOiAnUm9vdFF1ZXJ5VHlwZScsXHJcbiAgICBmaWVsZHM6ICgpID0+ICh7XHJcbiAgICAgICAgdXNlcnM6IHtcclxuICAgICAgICAgICAgdHlwZTogbmV3IEdyYXBoUUxMaXN0KFVzZXJUeXBlKSxcclxuICAgICAgICAgICAgcmVzb2x2ZSgpe1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHNlcXVlbGl6ZS5tb2RlbHMudXNlci5maW5kQWxsKClcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHVzZXI6IHtcclxuICAgICAgICAgICAgdHlwZTogVXNlclR5cGUsXHJcbiAgICAgICAgICAgIHJlc29sdmUocm9vdCwgYXJncywgcmVxKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiByZXEudXNlclxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBwb3N0czp7XHJcbiAgICAgICAgICAgIHR5cGU6IG5ldyBHcmFwaFFMTGlzdChQb3N0VHlwZSksXHJcbiAgICAgICAgICAgIHJlc29sdmUoKXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZXF1ZWxpemUubW9kZWxzLnBvc3QuZmluZEFsbCgpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9KSBcclxufSlcclxuXHJcblxyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gbmV3IEdyYXBoUUxTY2hlbWEoe1xyXG4gICAgcXVlcnk6IFJvb3RRdWVyeSxcclxuICAgIG11dGF0aW9uOiBNdXRhdGlvblxyXG59KSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "schema.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "UserType",
        "GraphQLObjectType",
        "name",
        "fields",
        "id",
        "type",
        "GraphQLInt",
        "resolve",
        "user",
        "email",
        "GraphQLString",
        "username",
        "avatar",
        "posts",
        "GraphQLList",
        "PostType",
        "sequelize",
        "models",
        "post",
        "findAll",
        "where",
        "userId",
        "title",
        "image",
        "Mutation",
        "addUser",
        "args",
        "password",
        "root",
        "login",
        "req",
        "logout",
        "RootQuery",
        "users",
        "module",
        "exports",
        "GraphQLSchema",
        "query",
        "mutation"
      ],
      "mappings": ";;AAAA;;AAWA;;AACA;;AACA;;AAHA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAIA,IAAMC,QAAQ,GAAE,IAAIC,0BAAJ,CAAsB;AAClCC,EAAAA,IAAI,EAAE,UAD4B;AAElCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXC,MAAAA,EAAE,EAAE;AACAC,QAAAA,IAAI,EAAEC,mBADN;AAEAC,QAAAA,OAFA,mBAEQC,IAFR,EAEa;AACT,iBAAOA,IAAI,CAACJ,EAAZ;AACH;AAJD,OADO;AAOXK,MAAAA,KAAK,EAAC;AACFJ,QAAAA,IAAI,EAAEK,sBADJ;AAEFH,QAAAA,OAFE,mBAEMC,IAFN,EAEW;AACT,iBAAOA,IAAI,CAACC,KAAZ;AACH;AAJC,OAPK;AAaXE,MAAAA,QAAQ,EAAE;AACNN,QAAAA,IAAI,EAAEK,sBADA;AAENH,QAAAA,OAFM,mBAEEC,IAFF,EAEO;AACT,iBAAOA,IAAI,CAACG,QAAZ;AACH;AAJK,OAbC;AAmBXC,MAAAA,MAAM,EAAC;AACHP,QAAAA,IAAI,EAAEK,sBADH;AAEHH,QAAAA,OAFG,mBAEKC,IAFL,EAEU;AACT,iBAAOA,IAAI,CAACI,MAAZ;AACH;AAJE,OAnBI;AAyBXC,MAAAA,KAAK,EAAE;AACHR,QAAAA,IAAI,EAAE,IAAIS,oBAAJ,CAAgBC,QAAhB,CADH;AAEHR,QAAAA,OAFG,mBAEKC,IAFL,EAEU;AACT,iBAAOQ,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8B;AAAEC,YAAAA,KAAK,EAAC;AAAEC,cAAAA,MAAM,EAAGb,IAAI,CAACJ;AAAhB;AAAR,WAA9B,CAAP;AACH;AAJE;AAzBI,KAAP;AAAA;AAF0B,CAAtB,CAAhB;AAqCA,IAAMW,QAAQ,GAAG,IAAId,0BAAJ,CAAsB;AACnCC,EAAAA,IAAI,EAAE,UAD6B;AAEnCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACXC,MAAAA,EAAE,EAAC;AACCC,QAAAA,IAAI,EAAEC,mBADP;AAECC,QAAAA,OAFD,mBAESW,IAFT,EAEc;AACV,iBAAOA,IAAI,CAACd,EAAZ;AACF;AAJF,OADQ;AAOXkB,MAAAA,KAAK,EAAC;AACFjB,QAAAA,IAAI,EAACK,sBADH;AAEFH,QAAAA,OAFE,mBAEMW,IAFN,EAEW;AACT,iBAAOA,IAAI,CAACI,KAAZ;AACH;AAJC,OAPK;AAaXD,MAAAA,MAAM,EAAE;AACJhB,QAAAA,IAAI,EAAEC,mBADF;AAEJC,QAAAA,OAFI,mBAEIW,IAFJ,EAES;AACT,iBAAOA,IAAI,CAACG,MAAZ;AACH;AAJG,OAbG;AAoBXE,MAAAA,KAAK,EAAE;AACHlB,QAAAA,IAAI,EAAEK,sBADH;AAEHH,QAAAA,OAFG,mBAEKW,IAFL,EAEU;AACT,iBAAOA,IAAI,CAACK,KAAZ;AACH;AAJE,OApBI;AA0BXf,MAAAA,IAAI,EAAC;AACDH,QAAAA,IAAI,EAAE,IAAIS,oBAAJ,CAAgBd,QAAhB,CADL;AAEDO,QAAAA,OAFC,mBAEOW,IAFP,EAEY;AACT,iBAAOF,cAAUC,MAAV,CAAiBT,IAAjB,CAAsBW,OAAtB,CAA8B;AAACC,YAAAA,KAAK,EAAE;AAAEhB,cAAAA,EAAE,EAAEc,IAAI,CAACG;AAAX;AAAR,WAA9B,CAAP;AACH;AAJA;AA1BM,KAAP;AAAA;AAF2B,CAAtB,CAAjB;AAsCA,IAAMG,QAAQ,GAAG,IAAIvB,0BAAJ,CAAsB;AACnCC,EAAAA,IAAI,EAAC,UAD8B;AAEnCC,EAAAA,MAAM,EAAC;AAAA,WAAM;AACTsB,MAAAA,OAAO,EAAE;AACLpB,QAAAA,IAAI,EAAEL,QADD;AAEL0B,QAAAA,IAAI,EAAC;AACDf,UAAAA,QAAQ,EAAE;AAACN,YAAAA,IAAI,EAAEK;AAAP,WADT;AAEDD,UAAAA,KAAK,EAAE;AAACJ,YAAAA,IAAI,EAAEK;AAAP,WAFN;AAGDiB,UAAAA,QAAQ,EAAE;AAACtB,YAAAA,IAAI,EAAEK;AAAP;AAHT,SAFA;AAOJH,QAAAA,OAPI,mBAOIqB,IAPJ,QAOsC;AAAA,cAA3BnB,KAA2B,QAA3BA,KAA2B;AAAA,cAApBkB,QAAoB,QAApBA,QAAoB;AAAA,cAAVhB,QAAU,QAAVA,QAAU;AACvC,iBAAO,0BAAa;AAACF,YAAAA,KAAK,EAALA,KAAD;AAAQkB,YAAAA,QAAQ,EAARA,QAAR;AAAkBhB,YAAAA,QAAQ,EAARA;AAAlB,WAAb,CAAP;AACH;AATI,OADA;AAYTkB,MAAAA,KAAK,EAAG;AACJxB,QAAAA,IAAI,EAAEL,QADF;AAEJ0B,QAAAA,IAAI,EAAC;AACDjB,UAAAA,KAAK,EAAC;AAACJ,YAAAA,IAAI,EAAEK;AAAP,WADL;AAEDiB,UAAAA,QAAQ,EAAE;AAACtB,YAAAA,IAAI,EAAEK;AAAP;AAFT,SAFD;AAMJH,QAAAA,OANI,mBAMIqB,IANJ,SAM6BE,GAN7B,EAMiC;AAAA,cAAtBrB,KAAsB,SAAtBA,KAAsB;AAAA,cAAfkB,QAAe,SAAfA,QAAe;AACjC,iBAAO,kBAAM;AAAClB,YAAAA,KAAK,EAALA,KAAD;AAAQkB,YAAAA,QAAQ,EAARA,QAAR;AAAkBG,YAAAA,GAAG,EAAHA;AAAlB,WAAN,CAAP;AACH;AARG,OAZC;AAuBTC,MAAAA,MAAM,EAAG;AACL1B,QAAAA,IAAI,EAAEL,QADD;AAELO,QAAAA,OAFK,mBAEGqB,IAFH,EAESF,IAFT,EAEeI,GAFf,EAEmB;AAAA,cACbtB,IADa,GACNsB,GADM,CACbtB,IADa;AAEpBsB,UAAAA,GAAG,CAACC,MAAJ;AACA,iBAAOvB,IAAP;AACH;AANI;AAvBA,KAAN;AAAA;AAF4B,CAAtB,CAAjB;AAoCA,IAAMwB,SAAS,GAAG,IAAI/B,0BAAJ,CAAsB;AACpCC,EAAAA,IAAI,EAAE,eAD8B;AAEpCC,EAAAA,MAAM,EAAE;AAAA,WAAO;AACX8B,MAAAA,KAAK,EAAE;AACH5B,QAAAA,IAAI,EAAE,IAAIS,oBAAJ,CAAgBd,QAAhB,CADH;AAEHO,QAAAA,OAFG,qBAEM;AACL,iBAAOS,cAAUC,MAAV,CAAiBT,IAAjB,CAAsBW,OAAtB,EAAP;AACH;AAJE,OADI;AAQXX,MAAAA,IAAI,EAAE;AACFH,QAAAA,IAAI,EAAEL,QADJ;AAEFO,QAAAA,OAFE,mBAEMqB,IAFN,EAEYF,IAFZ,EAEkBI,GAFlB,EAEsB;AACpB,iBAAOA,GAAG,CAACtB,IAAX;AACH;AAJC,OARK;AAcXK,MAAAA,KAAK,EAAC;AACFR,QAAAA,IAAI,EAAE,IAAIS,oBAAJ,CAAgBC,QAAhB,CADJ;AAEFR,QAAAA,OAFE,qBAEO;AACL,iBAAOS,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,EAAP;AACH;AAJC;AAdK,KAAP;AAAA;AAF4B,CAAtB,CAAlB;AA6BAe,MAAM,CAACC,OAAP,GAAiB,IAAIC,sBAAJ,CAAkB;AAC/BC,EAAAA,KAAK,EAAEL,SADwB;AAE/BM,EAAAA,QAAQ,EAAEd;AAFqB,CAAlB,CAAjB",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "sourcesContent": [
        "import {\r\n    GraphQLSchema,\r\n    GraphQLObjectType,\r\n    GraphQLList,\r\n    GraphQLString,\r\n    GraphQLInt,\r\n    GraphQLID,\r\n    \r\n}\r\nfrom \"graphql\"\r\nconst bcrypt = require(\"bcryptjs\")\r\nimport {signUpHandle} from \"./helpers/signUp\"\r\nimport {login} from \"./helpers/logIn\"\r\nimport {sequelize} from \"./db\"\r\nconst UserType= new GraphQLObjectType({\r\n    name: \"UserType\",\r\n    fields: () => ({\r\n        id: {\r\n            type: GraphQLInt,\r\n            resolve(user){\r\n                return user.id\r\n            } \r\n        },\r\n        email:{\r\n            type: GraphQLString,\r\n            resolve(user){\r\n                return user.email\r\n            }\r\n        },\r\n        username: {\r\n            type: GraphQLString,\r\n            resolve(user){\r\n                return user.username\r\n            }\r\n        },\r\n        avatar:{\r\n            type: GraphQLString,\r\n            resolve(user){\r\n                return user.avatar\r\n            }\r\n        },\r\n        posts: {\r\n            type: new GraphQLList(PostType),\r\n            resolve(user){\r\n                return sequelize.models.post.findAll({ where:{ userId : user.id}})\r\n            }\r\n        }\r\n        \r\n    })\r\n}) \r\n\r\nconst PostType = new GraphQLObjectType({\r\n    name: \"PostType\",\r\n    fields: () => ({\r\n        id:{\r\n            type: GraphQLInt,\r\n            resolve(post){\r\n               return post.id\r\n            }\r\n        },\r\n        title:{\r\n            type:GraphQLString,\r\n            resolve(post){\r\n                return post.title\r\n            }\r\n        },\r\n        userId: {\r\n            type: GraphQLInt,\r\n            resolve(post){\r\n                return post.userId\r\n            }\r\n        \r\n        },\r\n        image: {\r\n            type: GraphQLString,\r\n            resolve(post){\r\n                return post.image\r\n            }\r\n        },\r\n        user:{\r\n            type: new GraphQLList(UserType),\r\n            resolve(post){\r\n                return sequelize.models.user.findAll({where: { id: post.userId}})\r\n            }\r\n        }\r\n    \r\n    })\r\n})\r\n\r\nconst Mutation = new GraphQLObjectType({\r\n    name:'Mutation',\r\n    fields:() =>({\r\n        addUser: {\r\n            type: UserType,\r\n            args:{\r\n                username: {type: GraphQLString},\r\n                email: {type: GraphQLString},\r\n                password: {type: GraphQLString}\r\n            },\r\n             resolve(root, {email, password, username}){\r\n                return signUpHandle({email, password, username})\r\n            }\r\n        },\r\n        login : {\r\n            type: UserType,\r\n            args:{\r\n                email:{type: GraphQLString},\r\n                password: {type: GraphQLString}\r\n            },\r\n            resolve(root, {email, password}, req){\r\n                return login({email, password, req})\r\n            }\r\n            \r\n        },\r\n        logout : {\r\n            type: UserType,\r\n            resolve(root, args, req){\r\n                const {user}= req\r\n                req.logout()\r\n                return user\r\n            }\r\n        }\r\n    })\r\n})\r\n\r\nconst RootQuery = new GraphQLObjectType({\r\n    name: 'RootQueryType',\r\n    fields: () => ({\r\n        users: {\r\n            type: new GraphQLList(UserType),\r\n            resolve(){\r\n                return sequelize.models.user.findAll()\r\n            }\r\n            \r\n        },\r\n        user: {\r\n            type: UserType,\r\n            resolve(root, args, req){\r\n                return req.user\r\n            }\r\n        },\r\n        posts:{\r\n            type: new GraphQLList(PostType),\r\n            resolve(){\r\n                return sequelize.models.post.findAll()\r\n            }\r\n        }\r\n        \r\n    }) \r\n})\r\n\r\n\r\n\r\n\r\nmodule.exports = new GraphQLSchema({\r\n    query: RootQuery,\r\n    mutation: Mutation\r\n})"
      ]
    },
    "sourceType": "script",
    "mtime": 1598552151755
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\signUp.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\signUp.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\signUp.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\signUp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
        "sourceFileName": "signUp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signUpHandle = signUpHandle;\n\nvar _sequelize = require(\"sequelize\");\n\nvar _db = require(\"./db\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar bcrypt = require(\"bcryptjs\");\n\nfunction signUpHandle(_x) {\n  return _signUpHandle.apply(this, arguments);\n}\n\nfunction _signUpHandle() {\n  _signUpHandle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n    var email, password, username;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password, username = _ref.username;\n            return _context.abrupt(\"return\", _db.sequelize.models.user.findOne({\n              where: _defineProperty({}, _sequelize.Op.or, {\n                email: email,\n                username: username\n              })\n            }).then(function (isExisting) {\n              console.log(isExisting);\n\n              if (isExisting) {\n                console.log(isExisting);\n                console.log(username);\n\n                if (isExisting.email === email) {\n                  throw new Error(\"Email is already taken\");\n                }\n\n                if (isExisting.username === username) {\n                  throw new Error(\"Username is already taken\");\n                }\n              }\n\n              var salt = bcrypt.genSaltSync(10);\n              var hash = bcrypt.hashSync(password, salt);\n              return _db.sequelize.models.user.create({\n                username: username,\n                email: email,\n                password: hash\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signUpHandle.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25VcC5qcyJdLCJuYW1lcyI6WyJiY3J5cHQiLCJyZXF1aXJlIiwic2lnblVwSGFuZGxlIiwiZW1haWwiLCJwYXNzd29yZCIsInVzZXJuYW1lIiwic2VxdWVsaXplIiwibW9kZWxzIiwidXNlciIsImZpbmRPbmUiLCJ3aGVyZSIsIk9wIiwib3IiLCJ0aGVuIiwiaXNFeGlzdGluZyIsImNvbnNvbGUiLCJsb2ciLCJFcnJvciIsInNhbHQiLCJnZW5TYWx0U3luYyIsImhhc2giLCJoYXNoU3luYyIsImNyZWF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOzs7Ozs7OztBQUZBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O1NBSXNCQyxZOzs7OzswRUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkJDLFlBQUFBLEtBQTdCLFFBQTZCQSxLQUE3QixFQUFvQ0MsUUFBcEMsUUFBb0NBLFFBQXBDLEVBQThDQyxRQUE5QyxRQUE4Q0EsUUFBOUM7QUFBQSw2Q0FDSUMsY0FBVUMsTUFBVixDQUFpQkMsSUFBakIsQ0FBc0JDLE9BQXRCLENBQThCO0FBQUNDLGNBQUFBLEtBQUssc0JBQUlDLGNBQUdDLEVBQVAsRUFBVztBQUFFVCxnQkFBQUEsS0FBSyxFQUFFQSxLQUFUO0FBQWdCRSxnQkFBQUEsUUFBUSxFQUFFQTtBQUExQixlQUFYO0FBQU4sYUFBOUIsRUFBc0ZRLElBQXRGLENBQTJGLFVBQUFDLFVBQVUsRUFBRTtBQUMxR0MsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7O0FBQ0Esa0JBQUdBLFVBQUgsRUFBYztBQUNWQyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7QUFDQUMsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWCxRQUFaOztBQUNBLG9CQUFHUyxVQUFVLENBQUNYLEtBQVgsS0FBcUJBLEtBQXhCLEVBQThCO0FBQUMsd0JBQU0sSUFBSWMsS0FBSixDQUFVLHdCQUFWLENBQU47QUFBMEM7O0FBQ3pFLG9CQUFHSCxVQUFVLENBQUNULFFBQVgsS0FBd0JBLFFBQTNCLEVBQW9DO0FBQUMsd0JBQU0sSUFBSVksS0FBSixDQUFVLDJCQUFWLENBQU47QUFBNkM7QUFDckY7O0FBQ0Qsa0JBQU1DLElBQUksR0FBR2xCLE1BQU0sQ0FBQ21CLFdBQVAsQ0FBbUIsRUFBbkIsQ0FBYjtBQUNBLGtCQUFNQyxJQUFJLEdBQUdwQixNQUFNLENBQUNxQixRQUFQLENBQWdCakIsUUFBaEIsRUFBMEJjLElBQTFCLENBQWI7QUFDQSxxQkFBT1osY0FBVUMsTUFBVixDQUFpQkMsSUFBakIsQ0FBc0JjLE1BQXRCLENBQTZCO0FBQ2hDakIsZ0JBQUFBLFFBQVEsRUFBRUEsUUFEc0I7QUFFaENGLGdCQUFBQSxLQUFLLEVBQUVBLEtBRnlCO0FBR2hDQyxnQkFBQUEsUUFBUSxFQUFFZ0I7QUFIc0IsZUFBN0IsQ0FBUDtBQUtILGFBZk0sQ0FESjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxweXRob25cXHByb2plY3RzXFxoYXRlcmdyYW1cXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdGpzXCIpXHJcbmltcG9ydCB7T3B9IGZyb20gXCJzZXF1ZWxpemVcIlxyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSBcIi4vZGJcIlxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNpZ25VcEhhbmRsZSh7ZW1haWwsIHBhc3N3b3JkLCB1c2VybmFtZX0pe1xyXG4gICAgcmV0dXJuIHNlcXVlbGl6ZS5tb2RlbHMudXNlci5maW5kT25lKHt3aGVyZToge1tPcC5vcl06eyBlbWFpbDogZW1haWwsIHVzZXJuYW1lOiB1c2VybmFtZX19fSkudGhlbihpc0V4aXN0aW5nPT57XHJcbiAgICAgICAgY29uc29sZS5sb2coaXNFeGlzdGluZylcclxuICAgICAgICBpZihpc0V4aXN0aW5nKXtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coaXNFeGlzdGluZylcclxuICAgICAgICAgICAgY29uc29sZS5sb2codXNlcm5hbWUpXHJcbiAgICAgICAgICAgIGlmKGlzRXhpc3RpbmcuZW1haWwgPT09IGVtYWlsKXt0aHJvdyBuZXcgRXJyb3IoXCJFbWFpbCBpcyBhbHJlYWR5IHRha2VuXCIpfVxyXG4gICAgICAgICAgICBpZihpc0V4aXN0aW5nLnVzZXJuYW1lID09PSB1c2VybmFtZSl7dGhyb3cgbmV3IEVycm9yKFwiVXNlcm5hbWUgaXMgYWxyZWFkeSB0YWtlblwiKX1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qgc2FsdCA9IGJjcnlwdC5nZW5TYWx0U3luYygxMCk7XHJcbiAgICAgICAgY29uc3QgaGFzaCA9IGJjcnlwdC5oYXNoU3luYyhwYXNzd29yZCwgc2FsdCk7XHJcbiAgICAgICAgcmV0dXJuIHNlcXVlbGl6ZS5tb2RlbHMudXNlci5jcmVhdGUoe1xyXG4gICAgICAgICAgICB1c2VybmFtZTogdXNlcm5hbWUsXHJcbiAgICAgICAgICAgIGVtYWlsOiBlbWFpbCxcclxuICAgICAgICAgICAgcGFzc3dvcmQ6IGhhc2hcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "signUp.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "signUpHandle",
        "email",
        "password",
        "username",
        "sequelize",
        "models",
        "user",
        "findOne",
        "where",
        "Op",
        "or",
        "then",
        "isExisting",
        "console",
        "log",
        "Error",
        "salt",
        "genSaltSync",
        "hash",
        "hashSync",
        "create"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;AAFA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;SAIsBC,Y;;;;;0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BC,YAAAA,KAA7B,QAA6BA,KAA7B,EAAoCC,QAApC,QAAoCA,QAApC,EAA8CC,QAA9C,QAA8CA,QAA9C;AAAA,6CACIC,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8B;AAACC,cAAAA,KAAK,sBAAIC,cAAGC,EAAP,EAAW;AAAET,gBAAAA,KAAK,EAAEA,KAAT;AAAgBE,gBAAAA,QAAQ,EAAEA;AAA1B,eAAX;AAAN,aAA9B,EAAsFQ,IAAtF,CAA2F,UAAAC,UAAU,EAAE;AAC1GC,cAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,kBAAGA,UAAH,EAAc;AACVC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;;AACA,oBAAGS,UAAU,CAACX,KAAX,KAAqBA,KAAxB,EAA8B;AAAC,wBAAM,IAAIc,KAAJ,CAAU,wBAAV,CAAN;AAA0C;;AACzE,oBAAGH,UAAU,CAACT,QAAX,KAAwBA,QAA3B,EAAoC;AAAC,wBAAM,IAAIY,KAAJ,CAAU,2BAAV,CAAN;AAA6C;AACrF;;AACD,kBAAMC,IAAI,GAAGlB,MAAM,CAACmB,WAAP,CAAmB,EAAnB,CAAb;AACA,kBAAMC,IAAI,GAAGpB,MAAM,CAACqB,QAAP,CAAgBjB,QAAhB,EAA0Bc,IAA1B,CAAb;AACA,qBAAOZ,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBc,MAAtB,CAA6B;AAChCjB,gBAAAA,QAAQ,EAAEA,QADsB;AAEhCF,gBAAAA,KAAK,EAAEA,KAFyB;AAGhCC,gBAAAA,QAAQ,EAAEgB;AAHsB,eAA7B,CAAP;AAKH,aAfM,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "sourcesContent": [
        "const bcrypt = require(\"bcryptjs\")\r\nimport {Op} from \"sequelize\"\r\nimport {sequelize} from \"./db\"\r\n\r\nexport async function signUpHandle({email, password, username}){\r\n    return sequelize.models.user.findOne({where: {[Op.or]:{ email: email, username: username}}}).then(isExisting=>{\r\n        console.log(isExisting)\r\n        if(isExisting){\r\n            console.log(isExisting)\r\n            console.log(username)\r\n            if(isExisting.email === email){throw new Error(\"Email is already taken\")}\r\n            if(isExisting.username === username){throw new Error(\"Username is already taken\")}\r\n        }\r\n        const salt = bcrypt.genSaltSync(10);\r\n        const hash = bcrypt.hashSync(password, salt);\r\n        return sequelize.models.user.create({\r\n            username: username,\r\n            email: email,\r\n            password: hash\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1598541621727
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\db.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\db.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\db.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sequelize = void 0;\n\nvar _sequelize = require(\"sequelize\");\n\nvar sequelize = new _sequelize.Sequelize('hatergram', 'kamen', 'kamen22', {\n  host: 'localhost',\n  dialect: 'postgres'\n});\nexports.sequelize = sequelize;\nvar User = sequelize.define('user', {\n  username: {\n    type: _sequelize.DataTypes.STRING,\n    allowNull: false,\n    unique: true\n  },\n  password: {\n    type: _sequelize.DataTypes.STRING,\n    allowNull: false\n  },\n  email: {\n    type: _sequelize.DataTypes.STRING,\n    allowNull: false,\n    unique: true\n  },\n  avatar: {\n    type: _sequelize.DataTypes.STRING\n  }\n});\nvar Post = sequelize.define('post', {\n  title: {\n    type: _sequelize.DataTypes.STRING,\n    allowNull: false\n  },\n  content: {\n    type: _sequelize.DataTypes.STRING,\n    allowNull: false\n  },\n  userId: {\n    type: _sequelize.DataTypes.INTEGER,\n    allowNull: false\n  },\n  image: {\n    type: _sequelize.DataTypes.STRING,\n    allownull: false\n  }\n}); // Relations\n\nUser.hasMany(Post);\nPost.belongsTo(User);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInNlcXVlbGl6ZSIsIlNlcXVlbGl6ZSIsImhvc3QiLCJkaWFsZWN0IiwiVXNlciIsImRlZmluZSIsInVzZXJuYW1lIiwidHlwZSIsIkRhdGFUeXBlcyIsIlNUUklORyIsImFsbG93TnVsbCIsInVuaXF1ZSIsInBhc3N3b3JkIiwiZW1haWwiLCJhdmF0YXIiLCJQb3N0IiwidGl0bGUiLCJjb250ZW50IiwidXNlcklkIiwiSU5URUdFUiIsImltYWdlIiwiYWxsb3dudWxsIiwiaGFzTWFueSIsImJlbG9uZ3NUbyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNPLElBQU1BLFNBQVMsR0FBRyxJQUFJQyxvQkFBSixDQUNyQixXQURxQixFQUVyQixPQUZxQixFQUdyQixTQUhxQixFQUlyQjtBQUNJQyxFQUFBQSxJQUFJLEVBQUUsV0FEVjtBQUVJQyxFQUFBQSxPQUFPLEVBQUU7QUFGYixDQUpxQixDQUFsQjs7QUFVUCxJQUFNQyxJQUFJLEdBQUdKLFNBQVMsQ0FBQ0ssTUFBVixDQUFpQixNQUFqQixFQUF3QjtBQUVqQ0MsRUFBQUEsUUFBUSxFQUFFO0FBQ05DLElBQUFBLElBQUksRUFBRUMscUJBQVVDLE1BRFY7QUFFTkMsSUFBQUEsU0FBUyxFQUFFLEtBRkw7QUFHTkMsSUFBQUEsTUFBTSxFQUFFO0FBSEYsR0FGdUI7QUFPakNDLEVBQUFBLFFBQVEsRUFBRTtBQUNOTCxJQUFBQSxJQUFJLEVBQUVDLHFCQUFVQyxNQURWO0FBRU5DLElBQUFBLFNBQVMsRUFBRTtBQUZMLEdBUHVCO0FBV2pDRyxFQUFBQSxLQUFLLEVBQUU7QUFDSE4sSUFBQUEsSUFBSSxFQUFFQyxxQkFBVUMsTUFEYjtBQUVIQyxJQUFBQSxTQUFTLEVBQUUsS0FGUjtBQUdIQyxJQUFBQSxNQUFNLEVBQUM7QUFISixHQVgwQjtBQWdCakNHLEVBQUFBLE1BQU0sRUFBRTtBQUNKUCxJQUFBQSxJQUFJLEVBQUVDLHFCQUFVQztBQURaO0FBaEJ5QixDQUF4QixDQUFiO0FBdUJBLElBQU1NLElBQUksR0FBR2YsU0FBUyxDQUFDSyxNQUFWLENBQWlCLE1BQWpCLEVBQXlCO0FBQ2xDVyxFQUFBQSxLQUFLLEVBQUU7QUFDTFQsSUFBQUEsSUFBSSxFQUFFQyxxQkFBVUMsTUFEWDtBQUVMQyxJQUFBQSxTQUFTLEVBQUU7QUFGTixHQUQyQjtBQUtsQ08sRUFBQUEsT0FBTyxFQUFFO0FBQ1BWLElBQUFBLElBQUksRUFBRUMscUJBQVVDLE1BRFQ7QUFFUEMsSUFBQUEsU0FBUyxFQUFFO0FBRkosR0FMeUI7QUFTbENRLEVBQUFBLE1BQU0sRUFBRTtBQUNKWCxJQUFBQSxJQUFJLEVBQUVDLHFCQUFVVyxPQURaO0FBRUpULElBQUFBLFNBQVMsRUFBQztBQUZOLEdBVDBCO0FBYWxDVSxFQUFBQSxLQUFLLEVBQUU7QUFDSGIsSUFBQUEsSUFBSSxFQUFFQyxxQkFBVUMsTUFEYjtBQUVIWSxJQUFBQSxTQUFTLEVBQUM7QUFGUDtBQWIyQixDQUF6QixDQUFiLEMsQ0FtQkU7O0FBQ0ZqQixJQUFJLENBQUNrQixPQUFMLENBQWFQLElBQWI7QUFDQUEsSUFBSSxDQUFDUSxTQUFMLENBQWVuQixJQUFmIiwic291cmNlUm9vdCI6IkM6XFxweXRob25cXHByb2plY3RzXFxoYXRlcmdyYW1cXGFwaVxcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VxdWVsaXplLCBEYXRhVHlwZXMsIE1vZGVsIH0gZnJvbSAnc2VxdWVsaXplJ1xyXG5leHBvcnQgY29uc3Qgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShcclxuICAgICdoYXRlcmdyYW0nLFxyXG4gICAgJ2thbWVuJyxcclxuICAgICdrYW1lbjIyJyxcclxuICAgIHtcclxuICAgICAgICBob3N0OiAnbG9jYWxob3N0JyxcclxuICAgICAgICBkaWFsZWN0OiAncG9zdGdyZXMnXHJcbiAgICB9XHJcbilcclxuXHJcbmNvbnN0IFVzZXIgPSBzZXF1ZWxpemUuZGVmaW5lKCd1c2VyJyx7XHJcbiAgIFxyXG4gICAgdXNlcm5hbWU6IHtcclxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgICAgIGFsbG93TnVsbDogZmFsc2UsXHJcbiAgICAgICAgdW5pcXVlOiB0cnVlLFxyXG4gICAgfSxcclxuICAgIHBhc3N3b3JkOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgfSxcclxuICAgIGVtYWlsOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd051bGw6IGZhbHNlLFxyXG4gICAgICAgIHVuaXF1ZTp0cnVlLFxyXG4gICAgfSxcclxuICAgIGF2YXRhcjoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5TVFJJTkcsXHJcblxyXG4gICAgfSxcclxuICAgIFxyXG4gICAgXHJcbn0pXHJcbmNvbnN0IFBvc3QgPSBzZXF1ZWxpemUuZGVmaW5lKCdwb3N0Jywge1xyXG4gICAgdGl0bGU6IHtcclxuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGNvbnRlbnQ6IHtcclxuICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgYWxsb3dOdWxsOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIHVzZXJJZDoge1xyXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5JTlRFR0VSLFxyXG4gICAgICAgIGFsbG93TnVsbDpmYWxzZVxyXG4gICAgfSxcclxuICAgIGltYWdlOiB7XHJcbiAgICAgICAgdHlwZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgICAgICBhbGxvd251bGw6ZmFsc2VcclxuICAgIH1cclxuICB9KTtcclxuICBcclxuICAvLyBSZWxhdGlvbnNcclxuVXNlci5oYXNNYW55KFBvc3QpO1xyXG5Qb3N0LmJlbG9uZ3NUbyhVc2VyKTtcclxuICBcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "sequelize",
        "Sequelize",
        "host",
        "dialect",
        "User",
        "define",
        "username",
        "type",
        "DataTypes",
        "STRING",
        "allowNull",
        "unique",
        "password",
        "email",
        "avatar",
        "Post",
        "title",
        "content",
        "userId",
        "INTEGER",
        "image",
        "allownull",
        "hasMany",
        "belongsTo"
      ],
      "mappings": ";;;;;;;AAAA;;AACO,IAAMA,SAAS,GAAG,IAAIC,oBAAJ,CACrB,WADqB,EAErB,OAFqB,EAGrB,SAHqB,EAIrB;AACIC,EAAAA,IAAI,EAAE,WADV;AAEIC,EAAAA,OAAO,EAAE;AAFb,CAJqB,CAAlB;;AAUP,IAAMC,IAAI,GAAGJ,SAAS,CAACK,MAAV,CAAiB,MAAjB,EAAwB;AAEjCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAEC,qBAAUC,MADV;AAENC,IAAAA,SAAS,EAAE,KAFL;AAGNC,IAAAA,MAAM,EAAE;AAHF,GAFuB;AAOjCC,EAAAA,QAAQ,EAAE;AACNL,IAAAA,IAAI,EAAEC,qBAAUC,MADV;AAENC,IAAAA,SAAS,EAAE;AAFL,GAPuB;AAWjCG,EAAAA,KAAK,EAAE;AACHN,IAAAA,IAAI,EAAEC,qBAAUC,MADb;AAEHC,IAAAA,SAAS,EAAE,KAFR;AAGHC,IAAAA,MAAM,EAAC;AAHJ,GAX0B;AAgBjCG,EAAAA,MAAM,EAAE;AACJP,IAAAA,IAAI,EAAEC,qBAAUC;AADZ;AAhByB,CAAxB,CAAb;AAuBA,IAAMM,IAAI,GAAGf,SAAS,CAACK,MAAV,CAAiB,MAAjB,EAAyB;AAClCW,EAAAA,KAAK,EAAE;AACLT,IAAAA,IAAI,EAAEC,qBAAUC,MADX;AAELC,IAAAA,SAAS,EAAE;AAFN,GAD2B;AAKlCO,EAAAA,OAAO,EAAE;AACPV,IAAAA,IAAI,EAAEC,qBAAUC,MADT;AAEPC,IAAAA,SAAS,EAAE;AAFJ,GALyB;AASlCQ,EAAAA,MAAM,EAAE;AACJX,IAAAA,IAAI,EAAEC,qBAAUW,OADZ;AAEJT,IAAAA,SAAS,EAAC;AAFN,GAT0B;AAalCU,EAAAA,KAAK,EAAE;AACHb,IAAAA,IAAI,EAAEC,qBAAUC,MADb;AAEHY,IAAAA,SAAS,EAAC;AAFP;AAb2B,CAAzB,CAAb,C,CAmBE;;AACFjB,IAAI,CAACkB,OAAL,CAAaP,IAAb;AACAA,IAAI,CAACQ,SAAL,CAAenB,IAAf",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\",
      "sourcesContent": [
        "import { Sequelize, DataTypes, Model } from 'sequelize'\r\nexport const sequelize = new Sequelize(\r\n    'hatergram',\r\n    'kamen',\r\n    'kamen22',\r\n    {\r\n        host: 'localhost',\r\n        dialect: 'postgres'\r\n    }\r\n)\r\n\r\nconst User = sequelize.define('user',{\r\n   \r\n    username: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        unique: true,\r\n    },\r\n    password: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n    },\r\n    email: {\r\n        type: DataTypes.STRING,\r\n        allowNull: false,\r\n        unique:true,\r\n    },\r\n    avatar: {\r\n        type: DataTypes.STRING,\r\n\r\n    },\r\n    \r\n    \r\n})\r\nconst Post = sequelize.define('post', {\r\n    title: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false\r\n    },\r\n    content: {\r\n      type: DataTypes.STRING,\r\n      allowNull: false\r\n    },\r\n    userId: {\r\n        type: DataTypes.INTEGER,\r\n        allowNull:false\r\n    },\r\n    image: {\r\n        type: DataTypes.STRING,\r\n        allownull:false\r\n    }\r\n  });\r\n  \r\n  // Relations\r\nUser.hasMany(Post);\r\nPost.belongsTo(User);\r\n  \r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598540919222
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\passportConfig.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\passportConfig.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\helpers\\passportConfig.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\passportConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
        "sourceFileName": "passportConfig.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _bcryptjs = _interopRequireDefault(require(\"bcryptjs\"));\n\nvar _passportLocal = _interopRequireDefault(require(\"passport-local\"));\n\nvar _db = require(\"../db\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar LocalStrategy = _passportLocal[\"default\"].Strategy;\n\nvar initialize = function initialize(passport) {\n  var findUser = function findUser(email, password, done) {\n    _db.sequelize.models.user.findOne({\n      where: {\n        email: email\n      }\n    }).then(function (user) {\n      if (!user) {\n        throw new Error(\"Not existing user\");\n      }\n\n      if (user) {\n        _bcryptjs[\"default\"].compare(password, user.password, function (err, isMatch) {\n          if (err) throw err;\n\n          if (isMatch) {\n            return done(null, user);\n          } else {\n            return done(null, false, \"Password is not correct\");\n          }\n        });\n      } else {\n        return done(null, false, \"Email is not registered\");\n      }\n    });\n  };\n\n  passport.use(new LocalStrategy({\n    usernameField: \"email\",\n    passwordField: \"password\"\n  }, findUser));\n  passport.serializeUser(function (user, done) {\n    console.log(\"ID \", user);\n    done(null, user.id);\n  });\n  passport.deserializeUser(function (id, done) {\n    console.log(id);\n\n    _db.sequelize.models.user.findOne({\n      where: {\n        id: id\n      }\n    }).then(function (res) {\n      if (!res) throw err;\n      return done(null, res);\n    });\n  });\n};\n\nvar _default = initialize;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBhc3Nwb3J0Q29uZmlnLmpzIl0sIm5hbWVzIjpbIkxvY2FsU3RyYXRlZ3kiLCJwYXNzcG9ydExvY2FsIiwiU3RyYXRlZ3kiLCJpbml0aWFsaXplIiwicGFzc3BvcnQiLCJmaW5kVXNlciIsImVtYWlsIiwicGFzc3dvcmQiLCJkb25lIiwic2VxdWVsaXplIiwibW9kZWxzIiwidXNlciIsImZpbmRPbmUiLCJ3aGVyZSIsInRoZW4iLCJFcnJvciIsImJjcnlwdCIsImNvbXBhcmUiLCJlcnIiLCJpc01hdGNoIiwidXNlIiwidXNlcm5hbWVGaWVsZCIsInBhc3N3b3JkRmllbGQiLCJzZXJpYWxpemVVc2VyIiwiY29uc29sZSIsImxvZyIsImlkIiwiZGVzZXJpYWxpemVVc2VyIiwicmVzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7O0FBQ0E7O0FBQ0E7Ozs7QUFDQSxJQUFNQSxhQUFhLEdBQUdDLDBCQUFjQyxRQUFwQzs7QUFFQSxJQUFNQyxVQUFVLEdBQUUsU0FBWkEsVUFBWSxDQUFDQyxRQUFELEVBQWE7QUFDM0IsTUFBTUMsUUFBUSxHQUFHLFNBQVhBLFFBQVcsQ0FBQ0MsS0FBRCxFQUFRQyxRQUFSLEVBQWtCQyxJQUFsQixFQUEwQjtBQUN2Q0Msa0JBQVVDLE1BQVYsQ0FBaUJDLElBQWpCLENBQXNCQyxPQUF0QixDQUE4QjtBQUFDQyxNQUFBQSxLQUFLLEVBQUM7QUFBQ1AsUUFBQUEsS0FBSyxFQUFDQTtBQUFQO0FBQVAsS0FBOUIsRUFBcURRLElBQXJELENBQTBELFVBQUFILElBQUksRUFBRTtBQUM1RCxVQUFHLENBQUNBLElBQUosRUFBUztBQUFDLGNBQU0sSUFBSUksS0FBSixDQUFVLG1CQUFWLENBQU47QUFBcUM7O0FBQy9DLFVBQUdKLElBQUgsRUFBUTtBQUNKSyw2QkFBT0MsT0FBUCxDQUFlVixRQUFmLEVBQXlCSSxJQUFJLENBQUNKLFFBQTlCLEVBQXdDLFVBQVVXLEdBQVYsRUFBZUMsT0FBZixFQUF1QjtBQUMzRCxjQUFHRCxHQUFILEVBQU8sTUFBTUEsR0FBTjs7QUFDUCxjQUFHQyxPQUFILEVBQVc7QUFDUCxtQkFBT1gsSUFBSSxDQUFDLElBQUQsRUFBT0csSUFBUCxDQUFYO0FBQ0gsV0FGRCxNQUVLO0FBQ0QsbUJBQU9ILElBQUksQ0FBQyxJQUFELEVBQU8sS0FBUCxFQUFjLHlCQUFkLENBQVg7QUFDSDtBQUNKLFNBUEQ7QUFRSCxPQVRELE1BU0s7QUFDRCxlQUFPQSxJQUFJLENBQUMsSUFBRCxFQUFPLEtBQVAsRUFBYyx5QkFBZCxDQUFYO0FBQ0g7QUFFQSxLQWZMO0FBa0JILEdBbkJEOztBQW9CQUosRUFBQUEsUUFBUSxDQUFDZ0IsR0FBVCxDQUFhLElBQUlwQixhQUFKLENBQWtCO0FBQzNCcUIsSUFBQUEsYUFBYSxFQUFDLE9BRGE7QUFFM0JDLElBQUFBLGFBQWEsRUFBQztBQUZhLEdBQWxCLEVBR1hqQixRQUhXLENBQWI7QUFLQUQsRUFBQUEsUUFBUSxDQUFDbUIsYUFBVCxDQUF1QixVQUFDWixJQUFELEVBQU9ILElBQVAsRUFBZTtBQUNsQ2dCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLEtBQVosRUFBbUJkLElBQW5CO0FBQ0FILElBQUFBLElBQUksQ0FBQyxJQUFELEVBQU9HLElBQUksQ0FBQ2UsRUFBWixDQUFKO0FBQW9CLEdBRnhCO0FBR0F0QixFQUFBQSxRQUFRLENBQUN1QixlQUFULENBQXlCLFVBQUNELEVBQUQsRUFBS2xCLElBQUwsRUFBWTtBQUNqQ2dCLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxFQUFaOztBQUNBakIsa0JBQVVDLE1BQVYsQ0FBaUJDLElBQWpCLENBQXNCQyxPQUF0QixDQUE4QjtBQUFDQyxNQUFBQSxLQUFLLEVBQUU7QUFBQ2EsUUFBQUEsRUFBRSxFQUFFQTtBQUFMO0FBQVIsS0FBOUIsRUFBaURaLElBQWpELENBQXNELFVBQUFjLEdBQUcsRUFBRTtBQUN2RCxVQUFHLENBQUNBLEdBQUosRUFBUyxNQUFNVixHQUFOO0FBQ1QsYUFBT1YsSUFBSSxDQUFDLElBQUQsRUFBT29CLEdBQVAsQ0FBWDtBQUNILEtBSEQ7QUFJSCxHQU5EO0FBUUgsQ0FyQ0Q7O2VBdUNlekIsVSIsInNvdXJjZVJvb3QiOiJDOlxccHl0aG9uXFxwcm9qZWN0c1xcaGF0ZXJncmFtXFxhcGlcXGhlbHBlcnNcXCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiY3J5cHQgZnJvbSBcImJjcnlwdGpzXCJcclxuaW1wb3J0IHBhc3Nwb3J0TG9jYWwgZnJvbSBcInBhc3Nwb3J0LWxvY2FsXCJcclxuaW1wb3J0IHtzZXF1ZWxpemV9IGZyb20gXCIuLi9kYlwiXHJcbmNvbnN0IExvY2FsU3RyYXRlZ3kgPSBwYXNzcG9ydExvY2FsLlN0cmF0ZWd5XHJcblxyXG5jb25zdCBpbml0aWFsaXplPSAocGFzc3BvcnQpID0+e1xyXG4gICAgY29uc3QgZmluZFVzZXIgPSAoZW1haWwsIHBhc3N3b3JkLCBkb25lKT0+IHtcclxuICAgICAgICBzZXF1ZWxpemUubW9kZWxzLnVzZXIuZmluZE9uZSh7d2hlcmU6e2VtYWlsOmVtYWlsfX0pLnRoZW4odXNlcj0+e1xyXG4gICAgICAgICAgICBpZighdXNlcil7dGhyb3cgbmV3IEVycm9yKFwiTm90IGV4aXN0aW5nIHVzZXJcIil9XHJcbiAgICAgICAgICAgIGlmKHVzZXIpe1xyXG4gICAgICAgICAgICAgICAgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIHVzZXIucGFzc3dvcmQsIGZ1bmN0aW9uIChlcnIsIGlzTWF0Y2gpe1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGVycil0aHJvdyBlcnJcclxuICAgICAgICAgICAgICAgICAgICBpZihpc01hdGNoKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUobnVsbCwgdXNlcilcclxuICAgICAgICAgICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvbmUobnVsbCwgZmFsc2UsIFwiUGFzc3dvcmQgaXMgbm90IGNvcnJlY3RcIilcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9ZWxzZXtcclxuICAgICAgICAgICAgICAgIHJldHVybiBkb25lKG51bGwsIGZhbHNlLCBcIkVtYWlsIGlzIG5vdCByZWdpc3RlcmVkXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgKVxyXG5cclxuICAgIH1cclxuICAgIHBhc3Nwb3J0LnVzZShuZXcgTG9jYWxTdHJhdGVneSh7XHJcbiAgICAgICAgdXNlcm5hbWVGaWVsZDpcImVtYWlsXCIsXHJcbiAgICAgICAgcGFzc3dvcmRGaWVsZDpcInBhc3N3b3JkXCJcclxuICAgIH0sZmluZFVzZXIpKVxyXG4gICAgXHJcbiAgICBwYXNzcG9ydC5zZXJpYWxpemVVc2VyKCh1c2VyLCBkb25lKSA9PntcclxuICAgICAgICBjb25zb2xlLmxvZyhcIklEIFwiLCB1c2VyKVxyXG4gICAgICAgIGRvbmUobnVsbCwgdXNlci5pZCl9KVxyXG4gICAgcGFzc3BvcnQuZGVzZXJpYWxpemVVc2VyKChpZCwgZG9uZSk9PntcclxuICAgICAgICBjb25zb2xlLmxvZyhpZClcclxuICAgICAgICBzZXF1ZWxpemUubW9kZWxzLnVzZXIuZmluZE9uZSh7d2hlcmU6IHtpZDogaWR9fSkudGhlbihyZXM9PntcclxuICAgICAgICAgICAgaWYoIXJlcykgdGhyb3cgZXJyXHJcbiAgICAgICAgICAgIHJldHVybiBkb25lKG51bGwsIHJlcylcclxuICAgICAgICB9KVxyXG4gICAgfSlcclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGluaXRpYWxpemUiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "passportConfig.js"
      ],
      "names": [
        "LocalStrategy",
        "passportLocal",
        "Strategy",
        "initialize",
        "passport",
        "findUser",
        "email",
        "password",
        "done",
        "sequelize",
        "models",
        "user",
        "findOne",
        "where",
        "then",
        "Error",
        "bcrypt",
        "compare",
        "err",
        "isMatch",
        "use",
        "usernameField",
        "passwordField",
        "serializeUser",
        "console",
        "log",
        "id",
        "deserializeUser",
        "res"
      ],
      "mappings": ";;;;;;;AAAA;;AACA;;AACA;;;;AACA,IAAMA,aAAa,GAAGC,0BAAcC,QAApC;;AAEA,IAAMC,UAAU,GAAE,SAAZA,UAAY,CAACC,QAAD,EAAa;AAC3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,EAA0B;AACvCC,kBAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8B;AAACC,MAAAA,KAAK,EAAC;AAACP,QAAAA,KAAK,EAACA;AAAP;AAAP,KAA9B,EAAqDQ,IAArD,CAA0D,UAAAH,IAAI,EAAE;AAC5D,UAAG,CAACA,IAAJ,EAAS;AAAC,cAAM,IAAII,KAAJ,CAAU,mBAAV,CAAN;AAAqC;;AAC/C,UAAGJ,IAAH,EAAQ;AACJK,6BAAOC,OAAP,CAAeV,QAAf,EAAyBI,IAAI,CAACJ,QAA9B,EAAwC,UAAUW,GAAV,EAAeC,OAAf,EAAuB;AAC3D,cAAGD,GAAH,EAAO,MAAMA,GAAN;;AACP,cAAGC,OAAH,EAAW;AACP,mBAAOX,IAAI,CAAC,IAAD,EAAOG,IAAP,CAAX;AACH,WAFD,MAEK;AACD,mBAAOH,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc,yBAAd,CAAX;AACH;AACJ,SAPD;AAQH,OATD,MASK;AACD,eAAOA,IAAI,CAAC,IAAD,EAAO,KAAP,EAAc,yBAAd,CAAX;AACH;AAEA,KAfL;AAkBH,GAnBD;;AAoBAJ,EAAAA,QAAQ,CAACgB,GAAT,CAAa,IAAIpB,aAAJ,CAAkB;AAC3BqB,IAAAA,aAAa,EAAC,OADa;AAE3BC,IAAAA,aAAa,EAAC;AAFa,GAAlB,EAGXjB,QAHW,CAAb;AAKAD,EAAAA,QAAQ,CAACmB,aAAT,CAAuB,UAACZ,IAAD,EAAOH,IAAP,EAAe;AAClCgB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBd,IAAnB;AACAH,IAAAA,IAAI,CAAC,IAAD,EAAOG,IAAI,CAACe,EAAZ,CAAJ;AAAoB,GAFxB;AAGAtB,EAAAA,QAAQ,CAACuB,eAAT,CAAyB,UAACD,EAAD,EAAKlB,IAAL,EAAY;AACjCgB,IAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;;AACAjB,kBAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8B;AAACC,MAAAA,KAAK,EAAE;AAACa,QAAAA,EAAE,EAAEA;AAAL;AAAR,KAA9B,EAAiDZ,IAAjD,CAAsD,UAAAc,GAAG,EAAE;AACvD,UAAG,CAACA,GAAJ,EAAS,MAAMV,GAAN;AACT,aAAOV,IAAI,CAAC,IAAD,EAAOoB,GAAP,CAAX;AACH,KAHD;AAIH,GAND;AAQH,CArCD;;eAuCezB,U",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "sourcesContent": [
        "import bcrypt from \"bcryptjs\"\r\nimport passportLocal from \"passport-local\"\r\nimport {sequelize} from \"../db\"\r\nconst LocalStrategy = passportLocal.Strategy\r\n\r\nconst initialize= (passport) =>{\r\n    const findUser = (email, password, done)=> {\r\n        sequelize.models.user.findOne({where:{email:email}}).then(user=>{\r\n            if(!user){throw new Error(\"Not existing user\")}\r\n            if(user){\r\n                bcrypt.compare(password, user.password, function (err, isMatch){\r\n                    if(err)throw err\r\n                    if(isMatch){\r\n                        return done(null, user)\r\n                    }else{\r\n                        return done(null, false, \"Password is not correct\")\r\n                    }\r\n                })\r\n            }else{\r\n                return done(null, false, \"Email is not registered\")\r\n            }\r\n                \r\n            }\r\n        )\r\n\r\n    }\r\n    passport.use(new LocalStrategy({\r\n        usernameField:\"email\",\r\n        passwordField:\"password\"\r\n    },findUser))\r\n    \r\n    passport.serializeUser((user, done) =>{\r\n        console.log(\"ID \", user)\r\n        done(null, user.id)})\r\n    passport.deserializeUser((id, done)=>{\r\n        console.log(id)\r\n        sequelize.models.user.findOne({where: {id: id}}).then(res=>{\r\n            if(!res) throw err\r\n            return done(null, res)\r\n        })\r\n    })\r\n\r\n}\r\n\r\nexport default initialize"
      ]
    },
    "sourceType": "script",
    "mtime": 1598545624021
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\signUp.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\signUp.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\helpers\\signUp.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\signUp.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
        "sourceFileName": "signUp.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signUpHandle = signUpHandle;\n\nvar _sequelize = require(\"sequelize\");\n\nvar _db = require(\"../db\");\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar bcrypt = require(\"bcryptjs\");\n\nfunction signUpHandle(_x) {\n  return _signUpHandle.apply(this, arguments);\n}\n\nfunction _signUpHandle() {\n  _signUpHandle = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n    var email, password, username;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            email = _ref.email, password = _ref.password, username = _ref.username;\n            return _context.abrupt(\"return\", _db.sequelize.models.user.findOne({\n              where: _defineProperty({}, _sequelize.Op.or, {\n                email: email,\n                username: username\n              })\n            }).then(function (isExisting) {\n              console.log(isExisting);\n\n              if (isExisting) {\n                console.log(isExisting);\n                console.log(username);\n\n                if (isExisting.email === email) {\n                  throw new Error(\"Email is already taken\");\n                }\n\n                if (isExisting.username === username) {\n                  throw new Error(\"Username is already taken\");\n                }\n              }\n\n              var salt = bcrypt.genSaltSync(10);\n              var hash = bcrypt.hashSync(password, salt);\n              return _db.sequelize.models.user.create({\n                username: username,\n                email: email,\n                password: hash\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _signUpHandle.apply(this, arguments);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpZ25VcC5qcyJdLCJuYW1lcyI6WyJiY3J5cHQiLCJyZXF1aXJlIiwic2lnblVwSGFuZGxlIiwiZW1haWwiLCJwYXNzd29yZCIsInVzZXJuYW1lIiwic2VxdWVsaXplIiwibW9kZWxzIiwidXNlciIsImZpbmRPbmUiLCJ3aGVyZSIsIk9wIiwib3IiLCJ0aGVuIiwiaXNFeGlzdGluZyIsImNvbnNvbGUiLCJsb2ciLCJFcnJvciIsInNhbHQiLCJnZW5TYWx0U3luYyIsImhhc2giLCJoYXNoU3luYyIsImNyZWF0ZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUNBOztBQUNBOzs7Ozs7OztBQUZBLElBQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBdEI7O1NBSXNCQyxZOzs7OzswRUFBZjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBNkJDLFlBQUFBLEtBQTdCLFFBQTZCQSxLQUE3QixFQUFvQ0MsUUFBcEMsUUFBb0NBLFFBQXBDLEVBQThDQyxRQUE5QyxRQUE4Q0EsUUFBOUM7QUFBQSw2Q0FDSUMsY0FBVUMsTUFBVixDQUFpQkMsSUFBakIsQ0FBc0JDLE9BQXRCLENBQThCO0FBQUNDLGNBQUFBLEtBQUssc0JBQUlDLGNBQUdDLEVBQVAsRUFBVztBQUFFVCxnQkFBQUEsS0FBSyxFQUFFQSxLQUFUO0FBQWdCRSxnQkFBQUEsUUFBUSxFQUFFQTtBQUExQixlQUFYO0FBQU4sYUFBOUIsRUFBc0ZRLElBQXRGLENBQTJGLFVBQUFDLFVBQVUsRUFBRTtBQUMxR0MsY0FBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7O0FBQ0Esa0JBQUdBLFVBQUgsRUFBYztBQUNWQyxnQkFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLFVBQVo7QUFDQUMsZ0JBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZWCxRQUFaOztBQUNBLG9CQUFHUyxVQUFVLENBQUNYLEtBQVgsS0FBcUJBLEtBQXhCLEVBQThCO0FBQUMsd0JBQU0sSUFBSWMsS0FBSixDQUFVLHdCQUFWLENBQU47QUFBMEM7O0FBQ3pFLG9CQUFHSCxVQUFVLENBQUNULFFBQVgsS0FBd0JBLFFBQTNCLEVBQW9DO0FBQUMsd0JBQU0sSUFBSVksS0FBSixDQUFVLDJCQUFWLENBQU47QUFBNkM7QUFDckY7O0FBQ0Qsa0JBQU1DLElBQUksR0FBR2xCLE1BQU0sQ0FBQ21CLFdBQVAsQ0FBbUIsRUFBbkIsQ0FBYjtBQUNBLGtCQUFNQyxJQUFJLEdBQUdwQixNQUFNLENBQUNxQixRQUFQLENBQWdCakIsUUFBaEIsRUFBMEJjLElBQTFCLENBQWI7QUFDQSxxQkFBT1osY0FBVUMsTUFBVixDQUFpQkMsSUFBakIsQ0FBc0JjLE1BQXRCLENBQTZCO0FBQ2hDakIsZ0JBQUFBLFFBQVEsRUFBRUEsUUFEc0I7QUFFaENGLGdCQUFBQSxLQUFLLEVBQUVBLEtBRnlCO0FBR2hDQyxnQkFBQUEsUUFBUSxFQUFFZ0I7QUFIc0IsZUFBN0IsQ0FBUDtBQUtILGFBZk0sQ0FESjs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxHIiwic291cmNlUm9vdCI6IkM6XFxweXRob25cXHByb2plY3RzXFxoYXRlcmdyYW1cXGFwaVxcaGVscGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYmNyeXB0ID0gcmVxdWlyZShcImJjcnlwdGpzXCIpXHJcbmltcG9ydCB7T3B9IGZyb20gXCJzZXF1ZWxpemVcIlxyXG5pbXBvcnQge3NlcXVlbGl6ZX0gZnJvbSBcIi4uL2RiXCJcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBzaWduVXBIYW5kbGUoe2VtYWlsLCBwYXNzd29yZCwgdXNlcm5hbWV9KXtcclxuICAgIHJldHVybiBzZXF1ZWxpemUubW9kZWxzLnVzZXIuZmluZE9uZSh7d2hlcmU6IHtbT3Aub3JdOnsgZW1haWw6IGVtYWlsLCB1c2VybmFtZTogdXNlcm5hbWV9fX0pLnRoZW4oaXNFeGlzdGluZz0+e1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGlzRXhpc3RpbmcpXHJcbiAgICAgICAgaWYoaXNFeGlzdGluZyl7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGlzRXhpc3RpbmcpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJuYW1lKVxyXG4gICAgICAgICAgICBpZihpc0V4aXN0aW5nLmVtYWlsID09PSBlbWFpbCl7dGhyb3cgbmV3IEVycm9yKFwiRW1haWwgaXMgYWxyZWFkeSB0YWtlblwiKX1cclxuICAgICAgICAgICAgaWYoaXNFeGlzdGluZy51c2VybmFtZSA9PT0gdXNlcm5hbWUpe3Rocm93IG5ldyBFcnJvcihcIlVzZXJuYW1lIGlzIGFscmVhZHkgdGFrZW5cIil9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnN0IHNhbHQgPSBiY3J5cHQuZ2VuU2FsdFN5bmMoMTApO1xyXG4gICAgICAgIGNvbnN0IGhhc2ggPSBiY3J5cHQuaGFzaFN5bmMocGFzc3dvcmQsIHNhbHQpO1xyXG4gICAgICAgIHJldHVybiBzZXF1ZWxpemUubW9kZWxzLnVzZXIuY3JlYXRlKHtcclxuICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLFxyXG4gICAgICAgICAgICBlbWFpbDogZW1haWwsXHJcbiAgICAgICAgICAgIHBhc3N3b3JkOiBoYXNoXHJcbiAgICAgICAgfSlcclxuICAgIH0pXHJcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "signUp.js"
      ],
      "names": [
        "bcrypt",
        "require",
        "signUpHandle",
        "email",
        "password",
        "username",
        "sequelize",
        "models",
        "user",
        "findOne",
        "where",
        "Op",
        "or",
        "then",
        "isExisting",
        "console",
        "log",
        "Error",
        "salt",
        "genSaltSync",
        "hash",
        "hashSync",
        "create"
      ],
      "mappings": ";;;;;;;AACA;;AACA;;;;;;;;AAFA,IAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;SAIsBC,Y;;;;;0EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6BC,YAAAA,KAA7B,QAA6BA,KAA7B,EAAoCC,QAApC,QAAoCA,QAApC,EAA8CC,QAA9C,QAA8CA,QAA9C;AAAA,6CACIC,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBC,OAAtB,CAA8B;AAACC,cAAAA,KAAK,sBAAIC,cAAGC,EAAP,EAAW;AAAET,gBAAAA,KAAK,EAAEA,KAAT;AAAgBE,gBAAAA,QAAQ,EAAEA;AAA1B,eAAX;AAAN,aAA9B,EAAsFQ,IAAtF,CAA2F,UAAAC,UAAU,EAAE;AAC1GC,cAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;;AACA,kBAAGA,UAAH,EAAc;AACVC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;;AACA,oBAAGS,UAAU,CAACX,KAAX,KAAqBA,KAAxB,EAA8B;AAAC,wBAAM,IAAIc,KAAJ,CAAU,wBAAV,CAAN;AAA0C;;AACzE,oBAAGH,UAAU,CAACT,QAAX,KAAwBA,QAA3B,EAAoC;AAAC,wBAAM,IAAIY,KAAJ,CAAU,2BAAV,CAAN;AAA6C;AACrF;;AACD,kBAAMC,IAAI,GAAGlB,MAAM,CAACmB,WAAP,CAAmB,EAAnB,CAAb;AACA,kBAAMC,IAAI,GAAGpB,MAAM,CAACqB,QAAP,CAAgBjB,QAAhB,EAA0Bc,IAA1B,CAAb;AACA,qBAAOZ,cAAUC,MAAV,CAAiBC,IAAjB,CAAsBc,MAAtB,CAA6B;AAChCjB,gBAAAA,QAAQ,EAAEA,QADsB;AAEhCF,gBAAAA,KAAK,EAAEA,KAFyB;AAGhCC,gBAAAA,QAAQ,EAAEgB;AAHsB,eAA7B,CAAP;AAKH,aAfM,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "sourcesContent": [
        "const bcrypt = require(\"bcryptjs\")\r\nimport {Op} from \"sequelize\"\r\nimport {sequelize} from \"../db\"\r\n\r\nexport async function signUpHandle({email, password, username}){\r\n    return sequelize.models.user.findOne({where: {[Op.or]:{ email: email, username: username}}}).then(isExisting=>{\r\n        console.log(isExisting)\r\n        if(isExisting){\r\n            console.log(isExisting)\r\n            console.log(username)\r\n            if(isExisting.email === email){throw new Error(\"Email is already taken\")}\r\n            if(isExisting.username === username){throw new Error(\"Username is already taken\")}\r\n        }\r\n        const salt = bcrypt.genSaltSync(10);\r\n        const hash = bcrypt.hashSync(password, salt);\r\n        return sequelize.models.user.create({\r\n            username: username,\r\n            email: email,\r\n            password: hash\r\n        })\r\n    })\r\n}"
      ]
    },
    "sourceType": "script",
    "mtime": 1598545622898
  },
  "{\"sourceRoot\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"filename\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\\\\helpers\\\\logIn.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\python\\\\projects\\\\hatergram\\\\api\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\python\\projects\\hatergram\\api",
      "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\logIn.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\python\\projects\\hatergram\\api",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\python\\projects\\hatergram\\api\\helpers\\logIn.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\python\\projects\\hatergram\\api\\helpers\\logIn.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
        "sourceFileName": "logIn.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.login = void 0;\n\nvar _passport = _interopRequireDefault(require(\"passport\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar login = function login(_ref) {\n  var email = _ref.email,\n      password = _ref.password,\n      req = _ref.req;\n  return new Promise(function (resolve, reject) {\n    _passport[\"default\"].authenticate('local', function (err, user) {\n      if (err) {\n        return console.log(err);\n      }\n\n      if (!user) {\n        reject('Invalid credentials.');\n      }\n\n      req.login(user, function () {\n        return resolve(user);\n      });\n    })({\n      body: {\n        email: email,\n        password: password\n      }\n    });\n  });\n};\n\nexports.login = login;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ0luLmpzIl0sIm5hbWVzIjpbImxvZ2luIiwiZW1haWwiLCJwYXNzd29yZCIsInJlcSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicGFzc3BvcnQiLCJhdXRoZW50aWNhdGUiLCJlcnIiLCJ1c2VyIiwiY29uc29sZSIsImxvZyIsImJvZHkiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUdPLElBQU1BLEtBQUssR0FBQyxTQUFOQSxLQUFNLE9BQTBCO0FBQUEsTUFBeEJDLEtBQXdCLFFBQXhCQSxLQUF3QjtBQUFBLE1BQWpCQyxRQUFpQixRQUFqQkEsUUFBaUI7QUFBQSxNQUFQQyxHQUFPLFFBQVBBLEdBQU87QUFDekMsU0FBTyxJQUFJQyxPQUFKLENBQVksVUFBQ0MsT0FBRCxFQUFVQyxNQUFWLEVBQW1CO0FBQ2xDQyx5QkFBU0MsWUFBVCxDQUFzQixPQUF0QixFQUE4QixVQUFDQyxHQUFELEVBQU1DLElBQU4sRUFBYztBQUN4QyxVQUFHRCxHQUFILEVBQU87QUFBQyxlQUFPRSxPQUFPLENBQUNDLEdBQVIsQ0FBWUgsR0FBWixDQUFQO0FBQXdCOztBQUNoQyxVQUFHLENBQUNDLElBQUosRUFBVTtBQUFFSixRQUFBQSxNQUFNLENBQUMsc0JBQUQsQ0FBTjtBQUErQjs7QUFFM0NILE1BQUFBLEdBQUcsQ0FBQ0gsS0FBSixDQUFVVSxJQUFWLEVBQWdCO0FBQUEsZUFBTUwsT0FBTyxDQUFDSyxJQUFELENBQWI7QUFBQSxPQUFoQjtBQUNILEtBTEQsRUFLRztBQUFDRyxNQUFBQSxJQUFJLEVBQUU7QUFBQ1osUUFBQUEsS0FBSyxFQUFMQSxLQUFEO0FBQVFDLFFBQUFBLFFBQVEsRUFBUkE7QUFBUjtBQUFQLEtBTEg7QUFNSCxHQVBNLENBQVA7QUFRSCxDQVRNIiwic291cmNlUm9vdCI6IkM6XFxweXRob25cXHByb2plY3RzXFxoYXRlcmdyYW1cXGFwaVxcaGVscGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhc3Nwb3J0IGZyb20gXCJwYXNzcG9ydFwiXHJcblxyXG5cclxuZXhwb3J0IGNvbnN0IGxvZ2luPSh7ZW1haWwsIHBhc3N3b3JkLCByZXF9KT0+e1xyXG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpPT57XHJcbiAgICAgICAgcGFzc3BvcnQuYXV0aGVudGljYXRlKCdsb2NhbCcsKGVyciwgdXNlcikgPT57XHJcbiAgICAgICAgICAgIGlmKGVycil7cmV0dXJuIGNvbnNvbGUubG9nKGVycil9XHJcbiAgICAgICAgICAgIGlmKCF1c2VyKSB7IHJlamVjdCgnSW52YWxpZCBjcmVkZW50aWFscy4nKX1cclxuXHJcbiAgICAgICAgICAgIHJlcS5sb2dpbih1c2VyLCAoKSA9PiByZXNvbHZlKHVzZXIpKTtcclxuICAgICAgICB9KSh7Ym9keToge2VtYWlsLCBwYXNzd29yZH0gfSlcclxuICAgIH0pO1xyXG59XHJcblxyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "logIn.js"
      ],
      "names": [
        "login",
        "email",
        "password",
        "req",
        "Promise",
        "resolve",
        "reject",
        "passport",
        "authenticate",
        "err",
        "user",
        "console",
        "log",
        "body"
      ],
      "mappings": ";;;;;;;AAAA;;;;AAGO,IAAMA,KAAK,GAAC,SAANA,KAAM,OAA0B;AAAA,MAAxBC,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,QAAiB,QAAjBA,QAAiB;AAAA,MAAPC,GAAO,QAAPA,GAAO;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;AAClCC,yBAASC,YAAT,CAAsB,OAAtB,EAA8B,UAACC,GAAD,EAAMC,IAAN,EAAc;AACxC,UAAGD,GAAH,EAAO;AAAC,eAAOE,OAAO,CAACC,GAAR,CAAYH,GAAZ,CAAP;AAAwB;;AAChC,UAAG,CAACC,IAAJ,EAAU;AAAEJ,QAAAA,MAAM,CAAC,sBAAD,CAAN;AAA+B;;AAE3CH,MAAAA,GAAG,CAACH,KAAJ,CAAUU,IAAV,EAAgB;AAAA,eAAML,OAAO,CAACK,IAAD,CAAb;AAAA,OAAhB;AACH,KALD,EAKG;AAACG,MAAAA,IAAI,EAAE;AAACZ,QAAAA,KAAK,EAALA,KAAD;AAAQC,QAAAA,QAAQ,EAARA;AAAR;AAAP,KALH;AAMH,GAPM,CAAP;AAQH,CATM",
      "sourceRoot": "C:\\python\\projects\\hatergram\\api\\helpers\\",
      "sourcesContent": [
        "import passport from \"passport\"\r\n\r\n\r\nexport const login=({email, password, req})=>{\r\n    return new Promise((resolve, reject)=>{\r\n        passport.authenticate('local',(err, user) =>{\r\n            if(err){return console.log(err)}\r\n            if(!user) { reject('Invalid credentials.')}\r\n\r\n            req.login(user, () => resolve(user));\r\n        })({body: {email, password} })\r\n    });\r\n}\r\n\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598551618248
  }
}